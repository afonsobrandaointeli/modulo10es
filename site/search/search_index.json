{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Fluxo de entrega cont\u00ednua \u00b6 Este m\u00f3dulo abordar\u00e1 conceitos fundamentais de m\u00e9tricas de software, destacando a import\u00e2ncia da medi\u00e7\u00e3o para o aprimoramento cont\u00ednuo da qualidade. Discutiremos tamb\u00e9m a rastreabilidade de requisitos, enfatizando como manter a coer\u00eancia e alinhamento entre o desenvolvimento e as necessidades do cliente. Por fim, exploraremos a governan\u00e7a de TI, fornecendo diretrizes para garantir que as pr\u00e1ticas de TI estejam alinhadas com os objetivos estrat\u00e9gicos da organiza\u00e7\u00e3o. Esteira de CI como guardi\u00e3 da qualidade Aspectos avan\u00e7ados de programa\u00e7\u00e3o: Vamos falar sobre performance de c\u00f3digo? Como dialogar com o seu ambiente cloud? SRE: Voc\u00ea est\u00e1 fazendo isso errado! Improve your coding skills Conectar no LinkedIn","title":"Home"},{"location":"#fluxo-de-entrega-continua","text":"Este m\u00f3dulo abordar\u00e1 conceitos fundamentais de m\u00e9tricas de software, destacando a import\u00e2ncia da medi\u00e7\u00e3o para o aprimoramento cont\u00ednuo da qualidade. Discutiremos tamb\u00e9m a rastreabilidade de requisitos, enfatizando como manter a coer\u00eancia e alinhamento entre o desenvolvimento e as necessidades do cliente. Por fim, exploraremos a governan\u00e7a de TI, fornecendo diretrizes para garantir que as pr\u00e1ticas de TI estejam alinhadas com os objetivos estrat\u00e9gicos da organiza\u00e7\u00e3o. Esteira de CI como guardi\u00e3 da qualidade Aspectos avan\u00e7ados de programa\u00e7\u00e3o: Vamos falar sobre performance de c\u00f3digo? Como dialogar com o seu ambiente cloud? SRE: Voc\u00ea est\u00e1 fazendo isso errado! Improve your coding skills Conectar no LinkedIn","title":"Fluxo de entrega cont\u00ednua"},{"location":"cicd/","text":"Roadmap das Aulas \u00b6 Confira o cronograma das aulas e os t\u00f3picos que ser\u00e3o abordados: Esteira de CI como guardi\u00e3 da qualidade \u00b6 Curso Semana Pontua\u00e7\u00e3o Introdu\u00e7\u00e3o ao fornecimento de servi\u00e7os de qualidade com DevOps Semana 08 0 Caso de uso: Como a Microsoft fornece software com o DevOps Semana 08 0 SRE e Disponibilidade: Experi\u00eancias e desafios do DevOps no Mercado Livre Semana 08 0 Plataforma Fury no Mercado Livre Semana 08 0 Garantia da qualidade de software Semana 08 0 Esquenta Kahoot! \u00b6 Prepare-se para o quiz! Teste seus conhecimentos sobre DevOps e os temas abordados nos autoestudos. Clique no bot\u00e3o abaixo para acessar o Kahoot! e entrar no jogo. Jogar Kahoot! O que \u00e9 CI/CD? \u00b6 CI/CD, ou Integra\u00e7\u00e3o Cont\u00ednua e Entrega/Implanta\u00e7\u00e3o Cont\u00ednua, \u00e9 um conjunto de pr\u00e1ticas que automatizam o processo de desenvolvimento, teste e implanta\u00e7\u00e3o de software. O objetivo \u00e9 entregar software de forma mais r\u00e1pida, frequente e confi\u00e1vel. Integra\u00e7\u00e3o Cont\u00ednua (CI) \u00b6 A CI envolve a integra\u00e7\u00e3o frequente do c\u00f3digo de todos os desenvolvedores em um reposit\u00f3rio central. Cada integra\u00e7\u00e3o passa por testes automatizados para garantir que o c\u00f3digo n\u00e3o introduza novos erros. Integra\u00e7\u00e3o frequente de c\u00f3digo Testes automatizados Feedback r\u00e1pido sobre erros Entrega/Implanta\u00e7\u00e3o Cont\u00ednua (CD) \u00b6 A CD automatiza o processo de implanta\u00e7\u00e3o do software em diferentes ambientes, como desenvolvimento, teste e produ\u00e7\u00e3o. O objetivo \u00e9 garantir que o software esteja sempre pronto para ser implantado em produ\u00e7\u00e3o. Implanta\u00e7\u00e3o automatizada Ambientes de teste realistas Entrega r\u00e1pida de novas funcionalidades O CI/CD \u00e9 essencial para equipes que desejam entregar software de alta qualidade de forma r\u00e1pida e eficiente. Ele ajuda a reduzir o tempo de lan\u00e7amento, aumentar a frequ\u00eancia de entregas e melhorar a qualidade do software. Garantia da Qualidade de Software \u00b6 A garantia da qualidade de software (SQA) \u00e9 um conjunto de atividades sistem\u00e1ticas que visam garantir que o software atenda aos requisitos e expectativas dos usu\u00e1rios. Isso envolve a aplica\u00e7\u00e3o de boas pr\u00e1ticas em todas as etapas do desenvolvimento, desde o planejamento at\u00e9 a implanta\u00e7\u00e3o e manuten\u00e7\u00e3o. Boas Pr\u00e1ticas de SQA \u00b6 Testes automatizados: Testes unit\u00e1rios, de integra\u00e7\u00e3o e de sistema automatizados para garantir a funcionalidade e o desempenho do software. An\u00e1lise est\u00e1tica de c\u00f3digo: Ferramentas como linters e analisadores est\u00e1ticos para identificar problemas de c\u00f3digo, como erros de sintaxe, vulnerabilidades de seguran\u00e7a e problemas de estilo. Revis\u00e3o de c\u00f3digo: Revis\u00e3o manual do c\u00f3digo por outros desenvolvedores para identificar problemas e garantir a qualidade do c\u00f3digo. Monitoramento cont\u00ednuo: Monitoramento do software em produ\u00e7\u00e3o para identificar problemas de desempenho, erros e falhas de seguran\u00e7a. Integra\u00e7\u00e3o cont\u00ednua e entrega cont\u00ednua (CI/CD): Automa\u00e7\u00e3o do processo de build, teste e implanta\u00e7\u00e3o para garantir que o software seja entregue de forma r\u00e1pida e confi\u00e1vel. Act: Simulando GitHub Actions Localmente \u00b6 O Act \u00e9 uma ferramenta poderosa que permite simular localmente os fluxos de trabalho do GitHub Actions. Isso agiliza o desenvolvimento e a depura\u00e7\u00e3o de seus pipelines de CI/CD, permitindo que voc\u00ea teste suas a\u00e7\u00f5es antes de envi\u00e1-las para o GitHub. Reposit\u00f3rio do Act no GitHub Dica \u00b6 Quer aprender mais sobre como usar o Act? Confira este artigo: Test your GitHub Actions locally with Act Instala\u00e7\u00e3o no Windows \u00b6 Para instalar o Act no Windows, voc\u00ea pode seguir os seguintes passos: Instale o Chocolatey: O Chocolatey \u00e9 um gerenciador de pacotes para Windows que facilita a instala\u00e7\u00e3o de softwares. Voc\u00ea pode instal\u00e1-lo seguindo as instru\u00e7\u00f5es no site oficial: https://chocolatey.org/install Instale o Act: Ap\u00f3s instalar o Chocolatey, abra um terminal com privil\u00e9gios de administrador e execute o seguinte comando: sh choco install act-cli Verifique a instala\u00e7\u00e3o: Ap\u00f3s a instala\u00e7\u00e3o, voc\u00ea pode verificar se o Act est\u00e1 funcionando corretamente executando o comando: sh act --version Multi-Stage Builds: Efici\u00eancia e Seguran\u00e7a \u00b6 Multi-stage builds s\u00e3o uma poderosa t\u00e9cnica do Docker que permite criar imagens menores e mais seguras, otimizando o processo de constru\u00e7\u00e3o e reduzindo a superf\u00edcie de ataque. Dockerfile Original \u00b6 # Dockerfile FROM golang:alpine WORKDIR /app COPY main.go main_test.go ./ RUN go mod init myapp RUN go mod tidy RUN go build -o main main.go EXPOSE 8080 CMD [ \"go\" , \"run\" , \"main.go\" ] Dockerfile Multi-Stage Otimizado \u00b6 # Est\u00e1gio de constru\u00e7\u00e3o FROM golang:1.22 AS builder WORKDIR /app COPY . . RUN go mod download RUN CGO_ENABLED = 0 GOOS = linux go build -o main . # Est\u00e1gio de produ\u00e7\u00e3o FROM alpine:latest WORKDIR /app COPY --from = builder /app/main . EXPOSE 8080 CMD [ \"./main\" ] Desafio! \u00b6 Em sala de aula, vamos abrir e revisar juntos o pipeline de CI/CD criado neste projeto. Seu desafio ser\u00e1: Clonar o reposit\u00f3rio. Criar uma conta no Render.com. Fazer o deploy da aplica\u00e7\u00e3o, personalizando-a para exibir seu nome em vez de \"Hello World\". Otimizar o Dockerfile utilizando a t\u00e9cnica de multi-stage build. Dicas para Limpar seu Docker \u00b6 Mantenha seu ambiente Docker organizado e livre de recursos n\u00e3o utilizados com estes comandos \u00fateis: Comandos de Limpeza \u00b6 docker stop $( docker ps -aq ) docker rm $( docker ps -aq ) docker rmi $( docker images -aq ) docker image prune -af docker volume prune -f docker network prune -f docker system prune -af --volumes Aten\u00e7\u00e3o: O comando docker system prune -af --volumes remove todos os containers parados, imagens n\u00e3o utilizadas, redes n\u00e3o referenciadas e volumes pendentes. Use com cuidado! Sua Opini\u00e3o \u00e9 Importante! \u00b6 Deixe seu feedback com estrelas e coment\u00e1rios e ajude-nos a melhorar o Inteli e o curso de ES.","title":"Cicd"},{"location":"cicd/#roadmap-das-aulas","text":"Confira o cronograma das aulas e os t\u00f3picos que ser\u00e3o abordados:","title":"Roadmap das Aulas"},{"location":"cicd/#esteira-de-ci-como-guardia-da-qualidade","text":"Curso Semana Pontua\u00e7\u00e3o Introdu\u00e7\u00e3o ao fornecimento de servi\u00e7os de qualidade com DevOps Semana 08 0 Caso de uso: Como a Microsoft fornece software com o DevOps Semana 08 0 SRE e Disponibilidade: Experi\u00eancias e desafios do DevOps no Mercado Livre Semana 08 0 Plataforma Fury no Mercado Livre Semana 08 0 Garantia da qualidade de software Semana 08 0","title":"Esteira de CI como guardi\u00e3 da qualidade"},{"location":"cicd/#esquenta-kahoot","text":"Prepare-se para o quiz! Teste seus conhecimentos sobre DevOps e os temas abordados nos autoestudos. Clique no bot\u00e3o abaixo para acessar o Kahoot! e entrar no jogo. Jogar Kahoot!","title":"Esquenta Kahoot!"},{"location":"cicd/#o-que-e-cicd","text":"CI/CD, ou Integra\u00e7\u00e3o Cont\u00ednua e Entrega/Implanta\u00e7\u00e3o Cont\u00ednua, \u00e9 um conjunto de pr\u00e1ticas que automatizam o processo de desenvolvimento, teste e implanta\u00e7\u00e3o de software. O objetivo \u00e9 entregar software de forma mais r\u00e1pida, frequente e confi\u00e1vel.","title":"O que \u00e9 CI/CD?"},{"location":"cicd/#integracao-continua-ci","text":"A CI envolve a integra\u00e7\u00e3o frequente do c\u00f3digo de todos os desenvolvedores em um reposit\u00f3rio central. Cada integra\u00e7\u00e3o passa por testes automatizados para garantir que o c\u00f3digo n\u00e3o introduza novos erros. Integra\u00e7\u00e3o frequente de c\u00f3digo Testes automatizados Feedback r\u00e1pido sobre erros","title":"Integra\u00e7\u00e3o Cont\u00ednua (CI)"},{"location":"cicd/#entregaimplantacao-continua-cd","text":"A CD automatiza o processo de implanta\u00e7\u00e3o do software em diferentes ambientes, como desenvolvimento, teste e produ\u00e7\u00e3o. O objetivo \u00e9 garantir que o software esteja sempre pronto para ser implantado em produ\u00e7\u00e3o. Implanta\u00e7\u00e3o automatizada Ambientes de teste realistas Entrega r\u00e1pida de novas funcionalidades O CI/CD \u00e9 essencial para equipes que desejam entregar software de alta qualidade de forma r\u00e1pida e eficiente. Ele ajuda a reduzir o tempo de lan\u00e7amento, aumentar a frequ\u00eancia de entregas e melhorar a qualidade do software.","title":"Entrega/Implanta\u00e7\u00e3o Cont\u00ednua (CD)"},{"location":"cicd/#garantia-da-qualidade-de-software","text":"A garantia da qualidade de software (SQA) \u00e9 um conjunto de atividades sistem\u00e1ticas que visam garantir que o software atenda aos requisitos e expectativas dos usu\u00e1rios. Isso envolve a aplica\u00e7\u00e3o de boas pr\u00e1ticas em todas as etapas do desenvolvimento, desde o planejamento at\u00e9 a implanta\u00e7\u00e3o e manuten\u00e7\u00e3o.","title":"Garantia da Qualidade de Software"},{"location":"cicd/#boas-praticas-de-sqa","text":"Testes automatizados: Testes unit\u00e1rios, de integra\u00e7\u00e3o e de sistema automatizados para garantir a funcionalidade e o desempenho do software. An\u00e1lise est\u00e1tica de c\u00f3digo: Ferramentas como linters e analisadores est\u00e1ticos para identificar problemas de c\u00f3digo, como erros de sintaxe, vulnerabilidades de seguran\u00e7a e problemas de estilo. Revis\u00e3o de c\u00f3digo: Revis\u00e3o manual do c\u00f3digo por outros desenvolvedores para identificar problemas e garantir a qualidade do c\u00f3digo. Monitoramento cont\u00ednuo: Monitoramento do software em produ\u00e7\u00e3o para identificar problemas de desempenho, erros e falhas de seguran\u00e7a. Integra\u00e7\u00e3o cont\u00ednua e entrega cont\u00ednua (CI/CD): Automa\u00e7\u00e3o do processo de build, teste e implanta\u00e7\u00e3o para garantir que o software seja entregue de forma r\u00e1pida e confi\u00e1vel.","title":"Boas Pr\u00e1ticas de SQA"},{"location":"cicd/#act-simulando-github-actions-localmente","text":"O Act \u00e9 uma ferramenta poderosa que permite simular localmente os fluxos de trabalho do GitHub Actions. Isso agiliza o desenvolvimento e a depura\u00e7\u00e3o de seus pipelines de CI/CD, permitindo que voc\u00ea teste suas a\u00e7\u00f5es antes de envi\u00e1-las para o GitHub. Reposit\u00f3rio do Act no GitHub","title":"Act: Simulando GitHub Actions Localmente"},{"location":"cicd/#dica","text":"Quer aprender mais sobre como usar o Act? Confira este artigo: Test your GitHub Actions locally with Act","title":"Dica"},{"location":"cicd/#instalacao-no-windows","text":"Para instalar o Act no Windows, voc\u00ea pode seguir os seguintes passos: Instale o Chocolatey: O Chocolatey \u00e9 um gerenciador de pacotes para Windows que facilita a instala\u00e7\u00e3o de softwares. Voc\u00ea pode instal\u00e1-lo seguindo as instru\u00e7\u00f5es no site oficial: https://chocolatey.org/install Instale o Act: Ap\u00f3s instalar o Chocolatey, abra um terminal com privil\u00e9gios de administrador e execute o seguinte comando: sh choco install act-cli Verifique a instala\u00e7\u00e3o: Ap\u00f3s a instala\u00e7\u00e3o, voc\u00ea pode verificar se o Act est\u00e1 funcionando corretamente executando o comando: sh act --version","title":"Instala\u00e7\u00e3o no Windows"},{"location":"cicd/#multi-stage-builds-eficiencia-e-seguranca","text":"Multi-stage builds s\u00e3o uma poderosa t\u00e9cnica do Docker que permite criar imagens menores e mais seguras, otimizando o processo de constru\u00e7\u00e3o e reduzindo a superf\u00edcie de ataque.","title":"Multi-Stage Builds: Efici\u00eancia e Seguran\u00e7a"},{"location":"cicd/#dockerfile-original","text":"# Dockerfile FROM golang:alpine WORKDIR /app COPY main.go main_test.go ./ RUN go mod init myapp RUN go mod tidy RUN go build -o main main.go EXPOSE 8080 CMD [ \"go\" , \"run\" , \"main.go\" ]","title":"Dockerfile Original"},{"location":"cicd/#dockerfile-multi-stage-otimizado","text":"# Est\u00e1gio de constru\u00e7\u00e3o FROM golang:1.22 AS builder WORKDIR /app COPY . . RUN go mod download RUN CGO_ENABLED = 0 GOOS = linux go build -o main . # Est\u00e1gio de produ\u00e7\u00e3o FROM alpine:latest WORKDIR /app COPY --from = builder /app/main . EXPOSE 8080 CMD [ \"./main\" ]","title":"Dockerfile Multi-Stage Otimizado"},{"location":"cicd/#desafio","text":"Em sala de aula, vamos abrir e revisar juntos o pipeline de CI/CD criado neste projeto. Seu desafio ser\u00e1: Clonar o reposit\u00f3rio. Criar uma conta no Render.com. Fazer o deploy da aplica\u00e7\u00e3o, personalizando-a para exibir seu nome em vez de \"Hello World\". Otimizar o Dockerfile utilizando a t\u00e9cnica de multi-stage build.","title":"Desafio!"},{"location":"cicd/#dicas-para-limpar-seu-docker","text":"Mantenha seu ambiente Docker organizado e livre de recursos n\u00e3o utilizados com estes comandos \u00fateis:","title":"Dicas para Limpar seu Docker"},{"location":"cicd/#comandos-de-limpeza","text":"docker stop $( docker ps -aq ) docker rm $( docker ps -aq ) docker rmi $( docker images -aq ) docker image prune -af docker volume prune -f docker network prune -f docker system prune -af --volumes Aten\u00e7\u00e3o: O comando docker system prune -af --volumes remove todos os containers parados, imagens n\u00e3o utilizadas, redes n\u00e3o referenciadas e volumes pendentes. Use com cuidado!","title":"Comandos de Limpeza"},{"location":"cicd/#sua-opiniao-e-importante","text":"Deixe seu feedback com estrelas e coment\u00e1rios e ajude-nos a melhorar o Inteli e o curso de ES.","title":"Sua Opini\u00e3o \u00e9 Importante!"},{"location":"cloud/","text":"Roadmap das Aulas \u00b6 Confira o cronograma das aulas e os t\u00f3picos que ser\u00e3o abordados: Como dialogar com o seu ambiente cloud? \u00b6 Curso Semana Pontua\u00e7\u00e3o O que \u00e9 o Terraform? Semana 09 0 Terraform em 10 Minutos Semana 09 0 Build infrastructure Semana 09 2 What is Infrastructure as Code with Terraform? Semana 09 0 Install Terraform Semana 09 0 Documenta\u00e7\u00e3o e Instala\u00e7\u00e3o \u00b6 Documenta\u00e7\u00e3o Terraform/AWS Instala\u00e7\u00e3o Terraform Passo a Passo para Criar uma Inst\u00e2ncia EC2 com Terraform \u00b6 Requisitos Pr\u00e9-requisitos \u00b6 Antes de iniciar, certifique-se de que voc\u00ea tem uma conta na AWS Academy . Al\u00e9m disso, voc\u00ea pode encontrar um reposit\u00f3rio de exemplo para Terraform em: Reposit\u00f3rio de Exemplo Terraform . Instalando o Terraform CLI \u00b6 Siga os passos abaixo para instalar o Terraform CLI no Windows usando PowerShell: Abra o PowerShell como Administrador. Baixe o Terraform executando o comando: powershell Invoke-WebRequest -Uri https://releases.hashicorp.com/terraform/1.0.11/terraform_1.0.11_windows_amd64.zip -OutFile terraform.zip Extraia o arquivo ZIP: powershell Expand-Archive -Path terraform.zip -DestinationPath C:\\terraform Adicione o Terraform ao PATH do sistema: powershell [System.Environment]::SetEnvironmentVariable('PATH', $env:PATH + ';C:\\terraform', [System.EnvironmentVariableTarget]::Machine) Verifique a instala\u00e7\u00e3o executando: powershell terraform -v Instalando o AWS CLI \u00b6 Siga os passos abaixo para instalar o AWS CLI no Windows usando PowerShell: Abra o PowerShell como Administrador. Baixe o instalador do AWS CLI executando: powershell Invoke-WebRequest -Uri https://awscli.amazonaws.com/AWSCLIV2.msi -OutFile AWSCLIV2.msi Instale o AWS CLI executando: powershell Start-Process msiexec.exe -Wait -ArgumentList '/I AWSCLIV2.msi /quiet' Verifique a instala\u00e7\u00e3o executando: powershell aws --version Configurando as Credenciais da AWS \u00b6 Configure suas credenciais da AWS executando o comando: aws configure Forne\u00e7a suas credenciais de acesso (AWS Access Key ID, AWS Secret Access Key, regi\u00e3o padr\u00e3o e formato de sa\u00edda). Em seguida, configure o AWS Access Token diretamente no arquivo de credenciais: Abra o PowerShell e navegue at\u00e9 o diret\u00f3rio de configura\u00e7\u00e3o da AWS: powershell cd ~\\.aws\\ Abra o arquivo credentials em um editor de texto: powershell notepad credentials Adicione ou edite a se\u00e7\u00e3o com o seguinte conte\u00fado: plaintext [default] aws_access_key_id = YOUR_ACCESS_KEY_ID aws_secret_access_key = YOUR_SECRET_ACCESS_KEY aws_session_token = YOUR_SESSION_TOKEN Criando uma Inst\u00e2ncia EC2 com Terraform \u00b6 Crie um arquivo de configura\u00e7\u00e3o Terraform chamado main.tf com o seguinte conte\u00fado: provider \"aws\" { region = \"us-east-1\" } resource \"aws_instance\" \"example\" { ami = \"ami-0c02fb55956c7d316\" # Amazon Linux 2 AMI (HVM), SSD Volume Type instance_type = \"t2.micro\" tags = { Name = \"TerraformExample\" } } Inicializando o Terraform \u00b6 Abra o PowerShell no diret\u00f3rio onde est\u00e1 o arquivo main.tf e execute: terraform init Planejando a Infraestrutura \u00b6 Para ver o que ser\u00e1 criado, execute: terraform plan Aplicando a Configura\u00e7\u00e3o \u00b6 Para criar a inst\u00e2ncia EC2, execute: terraform apply Digite yes quando solicitado para confirmar a aplica\u00e7\u00e3o da configura\u00e7\u00e3o. Resolvendo Erros de AMI \u00b6 Se voc\u00ea encontrar o erro InvalidAMIID.NotFound , significa que o ID da AMI n\u00e3o \u00e9 v\u00e1lido para a regi\u00e3o especificada. Para encontrar uma AMI v\u00e1lida, voc\u00ea pode usar o comando AWS CLI: aws ec2 describe-images - -owners amazon - -filters \"Name=name,Values=amzn2-ami-hvm-2.0.????????-x86_64-gp2\" Isso retornar\u00e1 uma lista de AMIs v\u00e1lidas que voc\u00ea pode usar. Substitua o ID da AMI em seu arquivo main.tf por uma das AMIs listadas. Limpando a Infraestrutura \u00b6 Para destruir a inst\u00e2ncia criada, execute: terraform destroy Digite yes quando solicitado para confirmar a destrui\u00e7\u00e3o da infraestrutura. Infraestrutura como C\u00f3digo e Projetos \u00b6 O que \u00e9 infraestrutura como c\u00f3digo \u00b6 Que problemas voc\u00ea encontrou ao criar recursos na nuvem at\u00e9 agora? \u2753 Uma solu\u00e7\u00e3o \u00e9 Infraestrutura como C\u00f3digo \ud83d\udca1 Infraestrutura como c\u00f3digo (IaC) \u00e9 a pr\u00e1tica de definir os recursos de nuvem que voc\u00ea precisa em c\u00f3digo e, em seguida, permitir que eles sejam criados por meio dessas ferramentas em vez de manualmente pelo provedor de nuvem. Exemplo \u00b6 Por exemplo, em vez de criar uma m\u00e1quina virtual diretamente, descrevemos a m\u00e1quina virtual em c\u00f3digo e depois permitimos que nossa ferramenta, no nosso caso Terraform, a crie para n\u00f3s! \u2757\ufe0f Isso parece trabalho adicional \ud83d\ude05 Benef\u00edcios \ud83d\udfe2 \u00b6 Escalabilidade: Com infraestrutura como c\u00f3digo, as equipes podem provisionar e desprovisionar rapidamente recursos de infraestrutura para atender \u00e0s necessidades do neg\u00f3cio. Consist\u00eancia: Como a infraestrutura \u00e9 definida em c\u00f3digo, as equipes t\u00eam mais confian\u00e7a de que o ambiente ser\u00e1 consistente em todas as implanta\u00e7\u00f5es. Gerenciamento de mudan\u00e7as: Quando altera\u00e7\u00f5es s\u00e3o feitas no c\u00f3digo de infraestrutura, fica mais f\u00e1cil rastrear e gerenciar essas mudan\u00e7as ao longo do tempo. Colabora\u00e7\u00e3o: A infraestrutura como c\u00f3digo incentiva a colabora\u00e7\u00e3o e o controle de vers\u00e3o para garantir o mesmo ambiente em todas as equipes. Desvantagens \u274c \u00b6 Complexidade: Com infraestrutura como c\u00f3digo, voc\u00ea acaba com uma grande base de c\u00f3digo que pode ser dif\u00edcil de gerenciar. Tempo: Escrever infraestrutura como c\u00f3digo leva muito tempo inicialmente, ent\u00e3o para projetos pequenos pode ser mais eficiente n\u00e3o utiliz\u00e1-lo! Bloqueio: A maioria da infraestrutura como c\u00f3digo \u00e9 espec\u00edfica para o provedor de nuvem, se voc\u00ea quiser mudar de provedor, tamb\u00e9m precisar\u00e1 migrar todo o seu IaC! Vamos ver na pr\u00e1tica \ud83d\udee0! \u00b6 Terraform \u00b6 Terraform \u00e9 uma ferramenta IaC de c\u00f3digo aberto desenvolvida pela HashiCorp. O Terraform \u00e9 diferente de outras ferramentas IaC porque se concentra na constru\u00e7\u00e3o de uma representa\u00e7\u00e3o est\u00e1tica da infraestrutura desejada e, em seguida, atualiza incrementalmente a infraestrutura com base nas mudan\u00e7as de configura\u00e7\u00e3o. Principais benef\u00edcios do Terraform: \u00b6 Sintaxe declarativa: Com o Terraform, voc\u00ea descreve o estado desejado de sua infraestrutura em uma sintaxe declarativa, o que facilita o entendimento e o racioc\u00ednio. Suporte multi-cloud: O Terraform suporta v\u00e1rios provedores de nuvem, permitindo que voc\u00ea use uma \u00fanica ferramenta para gerenciar infraestrutura em diferentes plataformas. Depend\u00eancias de recursos: O Terraform determina automaticamente a ordem das opera\u00e7\u00f5es necess\u00e1rias para criar recursos de infraestrutura com depend\u00eancias de outros recursos (muito importante para configura\u00e7\u00f5es complexas). Gerenciamento de estado: Atrav\u00e9s do uso de arquivos de estado, o Terraform rastreia mudan\u00e7as na infraestrutura e ajuda a prevenir a diverg\u00eancia de configura\u00e7\u00e3o (cr\u00edtico para trabalho em equipe). Autoestudo: Construindo Infraestrutura \u00b6 Atividade ponderada: 2 pontos Atividade obrigat\u00f3ria Descri\u00e7\u00e3o \u00b6 Assista ao v\u00eddeo no link fornecido e siga o passo a passo do tutorial para criar seu ambiente utilizando o Terraform como IaC (Infraestrutura como C\u00f3digo). Tutorial Conte\u00fados Relacionados \u00b6 Constru\u00e7\u00e3o de Infraestrutura Pergunta \u00b6 Execute o passo a passo do tutorial: Utilize o Terraform para criar seu ambiente como IaC. Crie um reposit\u00f3rio no GitHub: Armazene o c\u00f3digo no reposit\u00f3rio. Documente no README: No arquivo README, descreva o passo a passo executado, incluindo imagens e descri\u00e7\u00f5es breves e objetivas sobre cada etapa e seu prop\u00f3sito. Adicione prints: Ao executar os comandos do Terraform, inclua prints dos resultados obtidos. Documente os itens provisionados: Crie uma se\u00e7\u00e3o para documentar os itens provisionados na nuvem pelo Terraform, utilizando prints como evid\u00eancia. Mantenha a qualidade: Certifique-se de que o trabalho seja coerente, objetivo, organizado e bem apresentado. Barema \u00b6 (De 0 a 3): Completude do passo a passo do autoestudo. (De 0 a 2): Organiza\u00e7\u00e3o do arquivo README e dos c\u00f3digos no reposit\u00f3rio. (De 0 a 2): Corretude e coes\u00e3o das informa\u00e7\u00f5es descritas no arquivo README. (De 0 a 3): Evid\u00eancias do funcionamento na nuvem da cria\u00e7\u00e3o do ambiente. Tutoriais Terraform \u00b6 Tutoriais Terraform Terradocs Ponderada Semana 9 M10 - Abner Ponderada Terraform - Felipe Santos Entregas de Prog - Stefano Terraform Tutorial - Pingu =) Sua Opini\u00e3o \u00e9 Importante! \u00b6 Deixe seu feedback com estrelas e coment\u00e1rios e ajude-nos a melhorar o Inteli e o curso.","title":"Roadmap das Aulas"},{"location":"cloud/#roadmap-das-aulas","text":"Confira o cronograma das aulas e os t\u00f3picos que ser\u00e3o abordados:","title":"Roadmap das Aulas"},{"location":"cloud/#como-dialogar-com-o-seu-ambiente-cloud","text":"Curso Semana Pontua\u00e7\u00e3o O que \u00e9 o Terraform? Semana 09 0 Terraform em 10 Minutos Semana 09 0 Build infrastructure Semana 09 2 What is Infrastructure as Code with Terraform? Semana 09 0 Install Terraform Semana 09 0","title":"Como dialogar com o seu ambiente cloud?"},{"location":"cloud/#documentacao-e-instalacao","text":"Documenta\u00e7\u00e3o Terraform/AWS Instala\u00e7\u00e3o Terraform","title":"Documenta\u00e7\u00e3o e Instala\u00e7\u00e3o"},{"location":"cloud/#passo-a-passo-para-criar-uma-instancia-ec2-com-terraform","text":"","title":"Passo a Passo para Criar uma Inst\u00e2ncia EC2 com Terraform"},{"location":"cloud/#requisitos-pre-requisitos","text":"Antes de iniciar, certifique-se de que voc\u00ea tem uma conta na AWS Academy . Al\u00e9m disso, voc\u00ea pode encontrar um reposit\u00f3rio de exemplo para Terraform em: Reposit\u00f3rio de Exemplo Terraform .","title":"Requisitos Pr\u00e9-requisitos"},{"location":"cloud/#instalando-o-terraform-cli","text":"Siga os passos abaixo para instalar o Terraform CLI no Windows usando PowerShell: Abra o PowerShell como Administrador. Baixe o Terraform executando o comando: powershell Invoke-WebRequest -Uri https://releases.hashicorp.com/terraform/1.0.11/terraform_1.0.11_windows_amd64.zip -OutFile terraform.zip Extraia o arquivo ZIP: powershell Expand-Archive -Path terraform.zip -DestinationPath C:\\terraform Adicione o Terraform ao PATH do sistema: powershell [System.Environment]::SetEnvironmentVariable('PATH', $env:PATH + ';C:\\terraform', [System.EnvironmentVariableTarget]::Machine) Verifique a instala\u00e7\u00e3o executando: powershell terraform -v","title":"Instalando o Terraform CLI"},{"location":"cloud/#instalando-o-aws-cli","text":"Siga os passos abaixo para instalar o AWS CLI no Windows usando PowerShell: Abra o PowerShell como Administrador. Baixe o instalador do AWS CLI executando: powershell Invoke-WebRequest -Uri https://awscli.amazonaws.com/AWSCLIV2.msi -OutFile AWSCLIV2.msi Instale o AWS CLI executando: powershell Start-Process msiexec.exe -Wait -ArgumentList '/I AWSCLIV2.msi /quiet' Verifique a instala\u00e7\u00e3o executando: powershell aws --version","title":"Instalando o AWS CLI"},{"location":"cloud/#configurando-as-credenciais-da-aws","text":"Configure suas credenciais da AWS executando o comando: aws configure Forne\u00e7a suas credenciais de acesso (AWS Access Key ID, AWS Secret Access Key, regi\u00e3o padr\u00e3o e formato de sa\u00edda). Em seguida, configure o AWS Access Token diretamente no arquivo de credenciais: Abra o PowerShell e navegue at\u00e9 o diret\u00f3rio de configura\u00e7\u00e3o da AWS: powershell cd ~\\.aws\\ Abra o arquivo credentials em um editor de texto: powershell notepad credentials Adicione ou edite a se\u00e7\u00e3o com o seguinte conte\u00fado: plaintext [default] aws_access_key_id = YOUR_ACCESS_KEY_ID aws_secret_access_key = YOUR_SECRET_ACCESS_KEY aws_session_token = YOUR_SESSION_TOKEN","title":"Configurando as Credenciais da AWS"},{"location":"cloud/#criando-uma-instancia-ec2-com-terraform","text":"Crie um arquivo de configura\u00e7\u00e3o Terraform chamado main.tf com o seguinte conte\u00fado: provider \"aws\" { region = \"us-east-1\" } resource \"aws_instance\" \"example\" { ami = \"ami-0c02fb55956c7d316\" # Amazon Linux 2 AMI (HVM), SSD Volume Type instance_type = \"t2.micro\" tags = { Name = \"TerraformExample\" } }","title":"Criando uma Inst\u00e2ncia EC2 com Terraform"},{"location":"cloud/#inicializando-o-terraform","text":"Abra o PowerShell no diret\u00f3rio onde est\u00e1 o arquivo main.tf e execute: terraform init","title":"Inicializando o Terraform"},{"location":"cloud/#planejando-a-infraestrutura","text":"Para ver o que ser\u00e1 criado, execute: terraform plan","title":"Planejando a Infraestrutura"},{"location":"cloud/#aplicando-a-configuracao","text":"Para criar a inst\u00e2ncia EC2, execute: terraform apply Digite yes quando solicitado para confirmar a aplica\u00e7\u00e3o da configura\u00e7\u00e3o.","title":"Aplicando a Configura\u00e7\u00e3o"},{"location":"cloud/#resolvendo-erros-de-ami","text":"Se voc\u00ea encontrar o erro InvalidAMIID.NotFound , significa que o ID da AMI n\u00e3o \u00e9 v\u00e1lido para a regi\u00e3o especificada. Para encontrar uma AMI v\u00e1lida, voc\u00ea pode usar o comando AWS CLI: aws ec2 describe-images - -owners amazon - -filters \"Name=name,Values=amzn2-ami-hvm-2.0.????????-x86_64-gp2\" Isso retornar\u00e1 uma lista de AMIs v\u00e1lidas que voc\u00ea pode usar. Substitua o ID da AMI em seu arquivo main.tf por uma das AMIs listadas.","title":"Resolvendo Erros de AMI"},{"location":"cloud/#limpando-a-infraestrutura","text":"Para destruir a inst\u00e2ncia criada, execute: terraform destroy Digite yes quando solicitado para confirmar a destrui\u00e7\u00e3o da infraestrutura.","title":"Limpando a Infraestrutura"},{"location":"cloud/#infraestrutura-como-codigo-e-projetos","text":"","title":"Infraestrutura como C\u00f3digo e Projetos"},{"location":"cloud/#o-que-e-infraestrutura-como-codigo","text":"Que problemas voc\u00ea encontrou ao criar recursos na nuvem at\u00e9 agora? \u2753 Uma solu\u00e7\u00e3o \u00e9 Infraestrutura como C\u00f3digo \ud83d\udca1 Infraestrutura como c\u00f3digo (IaC) \u00e9 a pr\u00e1tica de definir os recursos de nuvem que voc\u00ea precisa em c\u00f3digo e, em seguida, permitir que eles sejam criados por meio dessas ferramentas em vez de manualmente pelo provedor de nuvem.","title":"O que \u00e9 infraestrutura como c\u00f3digo"},{"location":"cloud/#exemplo","text":"Por exemplo, em vez de criar uma m\u00e1quina virtual diretamente, descrevemos a m\u00e1quina virtual em c\u00f3digo e depois permitimos que nossa ferramenta, no nosso caso Terraform, a crie para n\u00f3s! \u2757\ufe0f Isso parece trabalho adicional \ud83d\ude05","title":"Exemplo"},{"location":"cloud/#beneficios","text":"Escalabilidade: Com infraestrutura como c\u00f3digo, as equipes podem provisionar e desprovisionar rapidamente recursos de infraestrutura para atender \u00e0s necessidades do neg\u00f3cio. Consist\u00eancia: Como a infraestrutura \u00e9 definida em c\u00f3digo, as equipes t\u00eam mais confian\u00e7a de que o ambiente ser\u00e1 consistente em todas as implanta\u00e7\u00f5es. Gerenciamento de mudan\u00e7as: Quando altera\u00e7\u00f5es s\u00e3o feitas no c\u00f3digo de infraestrutura, fica mais f\u00e1cil rastrear e gerenciar essas mudan\u00e7as ao longo do tempo. Colabora\u00e7\u00e3o: A infraestrutura como c\u00f3digo incentiva a colabora\u00e7\u00e3o e o controle de vers\u00e3o para garantir o mesmo ambiente em todas as equipes.","title":"Benef\u00edcios \ud83d\udfe2"},{"location":"cloud/#desvantagens","text":"Complexidade: Com infraestrutura como c\u00f3digo, voc\u00ea acaba com uma grande base de c\u00f3digo que pode ser dif\u00edcil de gerenciar. Tempo: Escrever infraestrutura como c\u00f3digo leva muito tempo inicialmente, ent\u00e3o para projetos pequenos pode ser mais eficiente n\u00e3o utiliz\u00e1-lo! Bloqueio: A maioria da infraestrutura como c\u00f3digo \u00e9 espec\u00edfica para o provedor de nuvem, se voc\u00ea quiser mudar de provedor, tamb\u00e9m precisar\u00e1 migrar todo o seu IaC!","title":"Desvantagens \u274c"},{"location":"cloud/#vamos-ver-na-pratica","text":"","title":"Vamos ver na pr\u00e1tica \ud83d\udee0!"},{"location":"cloud/#terraform","text":"Terraform \u00e9 uma ferramenta IaC de c\u00f3digo aberto desenvolvida pela HashiCorp. O Terraform \u00e9 diferente de outras ferramentas IaC porque se concentra na constru\u00e7\u00e3o de uma representa\u00e7\u00e3o est\u00e1tica da infraestrutura desejada e, em seguida, atualiza incrementalmente a infraestrutura com base nas mudan\u00e7as de configura\u00e7\u00e3o.","title":"Terraform"},{"location":"cloud/#principais-beneficios-do-terraform","text":"Sintaxe declarativa: Com o Terraform, voc\u00ea descreve o estado desejado de sua infraestrutura em uma sintaxe declarativa, o que facilita o entendimento e o racioc\u00ednio. Suporte multi-cloud: O Terraform suporta v\u00e1rios provedores de nuvem, permitindo que voc\u00ea use uma \u00fanica ferramenta para gerenciar infraestrutura em diferentes plataformas. Depend\u00eancias de recursos: O Terraform determina automaticamente a ordem das opera\u00e7\u00f5es necess\u00e1rias para criar recursos de infraestrutura com depend\u00eancias de outros recursos (muito importante para configura\u00e7\u00f5es complexas). Gerenciamento de estado: Atrav\u00e9s do uso de arquivos de estado, o Terraform rastreia mudan\u00e7as na infraestrutura e ajuda a prevenir a diverg\u00eancia de configura\u00e7\u00e3o (cr\u00edtico para trabalho em equipe).","title":"Principais benef\u00edcios do Terraform:"},{"location":"cloud/#autoestudo-construindo-infraestrutura","text":"Atividade ponderada: 2 pontos Atividade obrigat\u00f3ria","title":"Autoestudo: Construindo Infraestrutura"},{"location":"cloud/#descricao","text":"Assista ao v\u00eddeo no link fornecido e siga o passo a passo do tutorial para criar seu ambiente utilizando o Terraform como IaC (Infraestrutura como C\u00f3digo). Tutorial","title":"Descri\u00e7\u00e3o"},{"location":"cloud/#conteudos-relacionados","text":"Constru\u00e7\u00e3o de Infraestrutura","title":"Conte\u00fados Relacionados"},{"location":"cloud/#pergunta","text":"Execute o passo a passo do tutorial: Utilize o Terraform para criar seu ambiente como IaC. Crie um reposit\u00f3rio no GitHub: Armazene o c\u00f3digo no reposit\u00f3rio. Documente no README: No arquivo README, descreva o passo a passo executado, incluindo imagens e descri\u00e7\u00f5es breves e objetivas sobre cada etapa e seu prop\u00f3sito. Adicione prints: Ao executar os comandos do Terraform, inclua prints dos resultados obtidos. Documente os itens provisionados: Crie uma se\u00e7\u00e3o para documentar os itens provisionados na nuvem pelo Terraform, utilizando prints como evid\u00eancia. Mantenha a qualidade: Certifique-se de que o trabalho seja coerente, objetivo, organizado e bem apresentado.","title":"Pergunta"},{"location":"cloud/#barema","text":"(De 0 a 3): Completude do passo a passo do autoestudo. (De 0 a 2): Organiza\u00e7\u00e3o do arquivo README e dos c\u00f3digos no reposit\u00f3rio. (De 0 a 2): Corretude e coes\u00e3o das informa\u00e7\u00f5es descritas no arquivo README. (De 0 a 3): Evid\u00eancias do funcionamento na nuvem da cria\u00e7\u00e3o do ambiente.","title":"Barema"},{"location":"cloud/#tutoriais-terraform","text":"Tutoriais Terraform Terradocs Ponderada Semana 9 M10 - Abner Ponderada Terraform - Felipe Santos Entregas de Prog - Stefano Terraform Tutorial - Pingu =)","title":"Tutoriais Terraform"},{"location":"cloud/#sua-opiniao-e-importante","text":"Deixe seu feedback com estrelas e coment\u00e1rios e ajude-nos a melhorar o Inteli e o curso.","title":"Sua Opini\u00e3o \u00e9 Importante!"},{"location":"performance/","text":"Roadmap das Aulas \u00b6 Confira o cronograma das aulas e os t\u00f3picos que ser\u00e3o abordados: Aspectos avan\u00e7ados de programa\u00e7\u00e3o: Vamos falar sobre performance de c\u00f3digo? \u00b6 Curso Semana Pontua\u00e7\u00e3o Padr\u00f5es de software Semana 08 0 Manipula\u00e7\u00e3o de bits: uma t\u00e9cnica essencial para programa\u00e7\u00e3o de alta performance Semana 08 0 Fundamentals of garbage collection Semana 08 0 Mapa de mem\u00f3ria de um processo Semana 08 0 Coletando m\u00e9tricas Semana 08 2 Performance de C\u00f3digo: A Busca pelo Limite \u00b6 Atingir o m\u00e1ximo de performance em c\u00f3digo exige um mergulho profundo nos mecanismos internos da linguagem de programa\u00e7\u00e3o. Pequenas otimiza\u00e7\u00f5es podem fazer uma grande diferen\u00e7a, especialmente em opera\u00e7\u00f5es repetidas milh\u00f5es de vezes. Exemplo: Par ou \u00cdmpar? \u00b6 Uma maneira comum de verificar se um n\u00famero \u00e9 par ou \u00edmpar \u00e9 usar o operador m\u00f3dulo (%). No entanto, existe uma alternativa mais r\u00e1pida: o operador bit a bit AND (&) combinado com o n\u00famero 1. def eh_par_modulo ( numero ): return numero % 2 == 0 def eh_par_bitwise ( numero ): return ( numero & 1 ) == 0 Em Python, a segunda fun\u00e7\u00e3o ( eh_par_bitwise ) tende a ser mais r\u00e1pida. Isso porque o operador & 1 realiza uma opera\u00e7\u00e3o bit a bit, verificando apenas o \u00faltimo bit do n\u00famero em sua representa\u00e7\u00e3o bin\u00e1ria. Se o \u00faltimo bit for 0, o n\u00famero \u00e9 par; se for 1, \u00e9 \u00edmpar. Essa opera\u00e7\u00e3o \u00e9 mais simples e direta do que o c\u00e1lculo do m\u00f3dulo. Indo Al\u00e9m da Performance \u00b6 Embora a otimiza\u00e7\u00e3o seja importante, \u00e9 crucial equilibrar performance com legibilidade e manutenibilidade do c\u00f3digo. Em muitos casos, a diferen\u00e7a de velocidade entre duas abordagens pode ser insignificante. Priorize a clareza do c\u00f3digo, a menos que o desempenho seja um fator cr\u00edtico na sua aplica\u00e7\u00e3o. Lembre-se: o conhecimento profundo da linguagem \u00e9 a chave para desbloquear todo o potencial de performance do seu c\u00f3digo! Telemetria vs. Logs de Neg\u00f3cio: Entendendo a Diferen\u00e7a \u00b6 Compreender a distin\u00e7\u00e3o entre telemetria e logs de neg\u00f3cio \u00e9 importante para construir um sistema de monitoramento eficiente e obter insights valiosos sobre o desempenho e o comportamento do seu software. Telemetria \u00b6 A telemetria \u00e9 a coleta automatizada de dados sobre o desempenho, o uso e a sa\u00fade do seu software em tempo real. Ela fornece informa\u00e7\u00f5es sobre m\u00e9tricas como tempo de resposta, utiliza\u00e7\u00e3o de recursos, taxas de erro e comportamento do usu\u00e1rio. Dados quantitativos Foco em m\u00e9tricas e indicadores Usada para monitoramento e an\u00e1lise de tend\u00eancias Logs de Neg\u00f3cio \u00b6 Os logs de neg\u00f3cio registram eventos espec\u00edficos relacionados \u00e0s atividades do seu software, como transa\u00e7\u00f5es, logins de usu\u00e1rios, altera\u00e7\u00f5es de dados e erros. Eles fornecem um registro detalhado do que aconteceu em um determinado momento. Dados qualitativos Foco em eventos e a\u00e7\u00f5es Usados para auditoria, depura\u00e7\u00e3o e an\u00e1lise de causa raiz InfluxDB: A Base para suas M\u00e9tricas \u00b6 O InfluxDB \u00e9 um banco de dados especializado em s\u00e9ries temporais, ideal para armazenar e analisar dados que mudam ao longo do tempo, como m\u00e9tricas, eventos e logs. Por que escolher o InfluxDB? \u00b6 Otimizado para s\u00e9ries temporais: Alta performance na escrita e consulta de dados com timestamps. Modelo de dados flex\u00edvel: Permite armazenar dados com tags e campos personalizados. Linguagem de consulta poderosa: Flux, uma linguagem de consulta SQL-like para manipular e agregar dados de s\u00e9ries temporais. Integra\u00e7\u00e3o com outras ferramentas: Compat\u00edvel com Prometheus, Grafana e outras ferramentas do ecossistema de monitoramento. Comparativo com MongoDB e Prometheus \u00b6 Caracter\u00edstica InfluxDB MongoDB Prometheus Tipo de dados S\u00e9ries temporais Documentos (JSON) M\u00e9tricas Modelo de dados Flex\u00edvel (tags e campos) Flex\u00edvel (sem esquema) M\u00e9tricas com r\u00f3tulos Linguagem de consulta Flux (SQL-like) MongoDB Query Language (MQL) PromQL Armazenamento Otimizado para s\u00e9ries temporais Armazenamento geral Armazenamento em mem\u00f3ria Uso principal Monitoramento, an\u00e1lise de s\u00e9ries temporais Armazenamento de dados de aplicativos, bancos de dados de prop\u00f3sito geral Monitoramento, alertas OpenTelemetry, Dynatrace e Prometheus: Observabilidade Aprimorada \u00b6 Explore as ferramentas que elevam a observabilidade do seu sistema, permitindo monitorar, rastrear e analisar o desempenho de suas aplica\u00e7\u00f5es de forma abrangente. OpenTelemetry \u00b6 OpenTelemetry \u00e9 um conjunto de APIs, SDKs, ferramentas e integra\u00e7\u00f5es que permite instrumentar, gerar, coletar e exportar dados de telemetria (traces, m\u00e9tricas e logs) para an\u00e1lise. Padr\u00e3o aberto e independente de fornecedor Coleta de dados de telemetria completa Integra\u00e7\u00e3o com diversas ferramentas de observabilidade Dynatrace \u00b6 Dynatrace \u00e9 uma plataforma de observabilidade completa que oferece monitoramento de aplica\u00e7\u00f5es, infraestrutura, experi\u00eancia do usu\u00e1rio e an\u00e1lise de neg\u00f3cios. Monitoramento full-stack Detec\u00e7\u00e3o autom\u00e1tica de problemas An\u00e1lise de causa raiz com intelig\u00eancia artificial Prometheus \u00b6 Prometheus \u00e9 um sistema de monitoramento e alerta de c\u00f3digo aberto, projetado para coletar m\u00e9tricas de s\u00e9ries temporais. Coleta de m\u00e9tricas em tempo real Linguagem de consulta poderosa (PromQL) Alertas flex\u00edveis InfluxDB e Prometheus com Docker: R\u00e1pido e F\u00e1cil \u00b6 Inicie rapidamente uma inst\u00e2ncia do InfluxDB e Prometheus usando o Docker e explore o exemplo de c\u00f3digo em Python para enviar m\u00e9tricas: Comando Docker \u00b6 docker run -d -p 8086 :8086 --name my-influxdb influxdb:latest docker run -d -p 9090 :9090 --name prometheus -v C:/Users/Intelii/source/repos/aulatal/prometheus.yml:/etc/prometheus/prometheus.yml prom/prometheus C\u00f3digo Python (app.py) \u00b6 from flask import Flask from prometheus_client import Gauge , start_http_server from influxdb_client import InfluxDBClient , Point , WritePrecision from influxdb_client.client.write_api import SYNCHRONOUS import random import time from dotenv import load_dotenv import os from threading import Thread # Carrega as vari\u00e1veis de ambiente do arquivo .env load_dotenv () app = Flask ( __name__ ) # Conex\u00e3o com o InfluxDB (lendo do .env) influx_url = os . getenv ( 'INFLUXDB_URL' ) influx_token = os . getenv ( 'INFLUXDB_TOKEN' ) influx_org = os . getenv ( 'INFLUXDB_ORG' ) influx_bucket = os . getenv ( 'INFLUXDB_BUCKET' ) try : client = InfluxDBClient ( url = influx_url , token = influx_token , org = influx_org ) write_api = client . write_api ( write_options = SYNCHRONOUS ) except Exception as e : print ( f \"Erro ao conectar ao InfluxDB: { e } \" ) exit ( 1 ) # Encerra o aplicativo se n\u00e3o conseguir conectar ao InfluxDB # M\u00e9tricas temperature = Gauge ( 'temperature_celsius' , 'Temperature in Celsius' ) humidity = Gauge ( 'humidity_percent' , 'Humidity in Percentage' ) pressure = Gauge ( 'pressure_hpa' , 'Pressure in hPa' ) @app . route ( '/' ) def index (): return \"Hello, World!\" def generate_metrics (): while True : temp_value = random . uniform ( 15 , 35 ) humidity_value = random . uniform ( 40 , 80 ) pressure_value = random . uniform ( 980 , 1030 ) temperature . set ( temp_value ) humidity . set ( humidity_value ) pressure . set ( pressure_value ) print ( f \"Metrics updated - Temperature: { temp_value } \u00b0C, Humidity: { humidity_value } %, Pressure: { pressure_value } hPa\" ) point = Point ( \"metrics\" ) . tag ( \"host\" , \"server01\" ) . \\ field ( \"temperature\" , temp_value ) . \\ field ( \"humidity\" , humidity_value ) . \\ field ( \"pressure\" , pressure_value ) . \\ time ( int ( time . time_ns ()), WritePrecision . NS ) try : write_api . write ( bucket = influx_bucket , org = influx_org , record = point ) print ( f \"Metrics sent to InfluxDB - Temperature: { temp_value } \u00b0C, Humidity: { humidity_value } %, Pressure: { pressure_value } hPa\" ) except Exception as e : print ( f \"Erro ao escrever no InfluxDB: { e } \" ) time . sleep ( 1 ) if __name__ == '__main__' : start_http_server ( 8000 ) # Inicia o servidor de m\u00e9tricas Prometheus na porta 8000 print ( \"Prometheus metrics server started on port 8000\" ) metrics_thread = Thread ( target = generate_metrics ) metrics_thread . start () app . run ( host = '0.0.0.0' , port = 5000 ) print ( \"Flask server started on port 5000\" ) .env \u00b6 INFLUXDB_URL=http://localhost:8086 INFLUXDB_TOKEN= INFLUXDB_ORG= INFLUXDB_BUCKET= prometheus.yml \u00b6 global : scrape_interval : 15s # Intervalo de coleta de m\u00e9tricas scrape_configs : - job_name : 'flask_app' static_configs : - targets : [ 'host.docker.internal:8000' ] requirements.txt \u00b6 Flask prometheus_client influxdb-client python-dotenv Aplicando a Aprendizagem Baseada em Times (TBL) com Autoestudo Ponderado \u00b6 Agora \u00e9 hora de colocar em pr\u00e1tica o que voc\u00ea aprendeu sobre m\u00e9tricas, logs e observabilidade! Nesta atividade TBL, voc\u00ea trabalhar\u00e1 em equipes mistas para aplicar o autoestudo \"Como extrair boas m\u00e9tricas da sua aplica\u00e7\u00e3o\" em um projeto pr\u00e1tico. Desafio TBL: \u00b6 Seu time dever\u00e1 aplicar ao seu projeto. Utilizando os conceitos de m\u00e9tricas, logs e as ferramentas apresentadas (InfluxDB, Prometheus, Grafana, OpenTelemetry), voc\u00eas dever\u00e3o: Coletar m\u00e9tricas relevantes da aplica\u00e7\u00e3o. Implementar o Prometheus para coletar e armazenar as m\u00e9tricas. Configurar o Grafana para visualizar as m\u00e9tricas em dashboards. Documentar todo o processo em um arquivo README.md, incluindo: Passo a passo detalhado da implementa\u00e7\u00e3o. Prints das m\u00e9tricas coletadas e dos dashboards do Grafana. Explica\u00e7\u00f5es claras e objetivas sobre as decis\u00f5es tomadas. Uso de commits sem\u00e2nticos para facilitar o acompanhamento do desenvolvimento. Instru\u00e7\u00f5es Completas do Desafio TBL \u00b6 Descri\u00e7\u00e3o: Como extrair boas m\u00e9tricas da sua aplica\u00e7\u00e3o Conte\u00fados Relacionados: Coletando M\u00e9tricas Pergunta: Crie um reposit\u00f3rio para armazenar os c\u00f3digos gerados no autoestudo. Siga o passo a passo, implementando a coleta de m\u00e9tricas, implementa\u00e7\u00e3o do Prometheus e Grafana. Documente o passo a passo em arquivo readme de forma que possa ser reproduzido posteriormente. Utilize prints e texto de forma clara, objetiva e coesa. Crie uma se\u00e7\u00e3o demonstrando os gr\u00e1ficos em funcionamento. Barema: Codifica\u00e7\u00e3o de todas as etapas - 3 pontos C\u00f3digo e Testes compilando e executando sem erros - 2 pontos M\u00e9tricas coletadas e evidenciadas no relat\u00f3rio - 2 pontos Commit sem\u00e2ntico e Organiza\u00e7\u00e3o do relat\u00f3rio - 1 ponto Relat\u00f3rio em markdown escrito de forma clara, concisa e objetiva - 2 pontos Autoestudo Ponderado \u00b6 Sua Opini\u00e3o \u00e9 Importante! \u00b6 Deixe seu feedback com estrelas e coment\u00e1rios e ajude-nos a melhorar o Inteli e o curso de ES.","title":"Roadmap das Aulas"},{"location":"performance/#roadmap-das-aulas","text":"Confira o cronograma das aulas e os t\u00f3picos que ser\u00e3o abordados:","title":"Roadmap das Aulas"},{"location":"performance/#aspectos-avancados-de-programacao-vamos-falar-sobre-performance-de-codigo","text":"Curso Semana Pontua\u00e7\u00e3o Padr\u00f5es de software Semana 08 0 Manipula\u00e7\u00e3o de bits: uma t\u00e9cnica essencial para programa\u00e7\u00e3o de alta performance Semana 08 0 Fundamentals of garbage collection Semana 08 0 Mapa de mem\u00f3ria de um processo Semana 08 0 Coletando m\u00e9tricas Semana 08 2","title":"Aspectos avan\u00e7ados de programa\u00e7\u00e3o: Vamos falar sobre performance de c\u00f3digo?"},{"location":"performance/#performance-de-codigo-a-busca-pelo-limite","text":"Atingir o m\u00e1ximo de performance em c\u00f3digo exige um mergulho profundo nos mecanismos internos da linguagem de programa\u00e7\u00e3o. Pequenas otimiza\u00e7\u00f5es podem fazer uma grande diferen\u00e7a, especialmente em opera\u00e7\u00f5es repetidas milh\u00f5es de vezes.","title":"Performance de C\u00f3digo: A Busca pelo Limite"},{"location":"performance/#exemplo-par-ou-impar","text":"Uma maneira comum de verificar se um n\u00famero \u00e9 par ou \u00edmpar \u00e9 usar o operador m\u00f3dulo (%). No entanto, existe uma alternativa mais r\u00e1pida: o operador bit a bit AND (&) combinado com o n\u00famero 1. def eh_par_modulo ( numero ): return numero % 2 == 0 def eh_par_bitwise ( numero ): return ( numero & 1 ) == 0 Em Python, a segunda fun\u00e7\u00e3o ( eh_par_bitwise ) tende a ser mais r\u00e1pida. Isso porque o operador & 1 realiza uma opera\u00e7\u00e3o bit a bit, verificando apenas o \u00faltimo bit do n\u00famero em sua representa\u00e7\u00e3o bin\u00e1ria. Se o \u00faltimo bit for 0, o n\u00famero \u00e9 par; se for 1, \u00e9 \u00edmpar. Essa opera\u00e7\u00e3o \u00e9 mais simples e direta do que o c\u00e1lculo do m\u00f3dulo.","title":"Exemplo: Par ou \u00cdmpar?"},{"location":"performance/#indo-alem-da-performance","text":"Embora a otimiza\u00e7\u00e3o seja importante, \u00e9 crucial equilibrar performance com legibilidade e manutenibilidade do c\u00f3digo. Em muitos casos, a diferen\u00e7a de velocidade entre duas abordagens pode ser insignificante. Priorize a clareza do c\u00f3digo, a menos que o desempenho seja um fator cr\u00edtico na sua aplica\u00e7\u00e3o. Lembre-se: o conhecimento profundo da linguagem \u00e9 a chave para desbloquear todo o potencial de performance do seu c\u00f3digo!","title":"Indo Al\u00e9m da Performance"},{"location":"performance/#telemetria-vs-logs-de-negocio-entendendo-a-diferenca","text":"Compreender a distin\u00e7\u00e3o entre telemetria e logs de neg\u00f3cio \u00e9 importante para construir um sistema de monitoramento eficiente e obter insights valiosos sobre o desempenho e o comportamento do seu software.","title":"Telemetria vs. Logs de Neg\u00f3cio: Entendendo a Diferen\u00e7a"},{"location":"performance/#telemetria","text":"A telemetria \u00e9 a coleta automatizada de dados sobre o desempenho, o uso e a sa\u00fade do seu software em tempo real. Ela fornece informa\u00e7\u00f5es sobre m\u00e9tricas como tempo de resposta, utiliza\u00e7\u00e3o de recursos, taxas de erro e comportamento do usu\u00e1rio. Dados quantitativos Foco em m\u00e9tricas e indicadores Usada para monitoramento e an\u00e1lise de tend\u00eancias","title":"Telemetria"},{"location":"performance/#logs-de-negocio","text":"Os logs de neg\u00f3cio registram eventos espec\u00edficos relacionados \u00e0s atividades do seu software, como transa\u00e7\u00f5es, logins de usu\u00e1rios, altera\u00e7\u00f5es de dados e erros. Eles fornecem um registro detalhado do que aconteceu em um determinado momento. Dados qualitativos Foco em eventos e a\u00e7\u00f5es Usados para auditoria, depura\u00e7\u00e3o e an\u00e1lise de causa raiz","title":"Logs de Neg\u00f3cio"},{"location":"performance/#influxdb-a-base-para-suas-metricas","text":"O InfluxDB \u00e9 um banco de dados especializado em s\u00e9ries temporais, ideal para armazenar e analisar dados que mudam ao longo do tempo, como m\u00e9tricas, eventos e logs.","title":"InfluxDB: A Base para suas M\u00e9tricas"},{"location":"performance/#por-que-escolher-o-influxdb","text":"Otimizado para s\u00e9ries temporais: Alta performance na escrita e consulta de dados com timestamps. Modelo de dados flex\u00edvel: Permite armazenar dados com tags e campos personalizados. Linguagem de consulta poderosa: Flux, uma linguagem de consulta SQL-like para manipular e agregar dados de s\u00e9ries temporais. Integra\u00e7\u00e3o com outras ferramentas: Compat\u00edvel com Prometheus, Grafana e outras ferramentas do ecossistema de monitoramento.","title":"Por que escolher o InfluxDB?"},{"location":"performance/#comparativo-com-mongodb-e-prometheus","text":"Caracter\u00edstica InfluxDB MongoDB Prometheus Tipo de dados S\u00e9ries temporais Documentos (JSON) M\u00e9tricas Modelo de dados Flex\u00edvel (tags e campos) Flex\u00edvel (sem esquema) M\u00e9tricas com r\u00f3tulos Linguagem de consulta Flux (SQL-like) MongoDB Query Language (MQL) PromQL Armazenamento Otimizado para s\u00e9ries temporais Armazenamento geral Armazenamento em mem\u00f3ria Uso principal Monitoramento, an\u00e1lise de s\u00e9ries temporais Armazenamento de dados de aplicativos, bancos de dados de prop\u00f3sito geral Monitoramento, alertas","title":"Comparativo com MongoDB e Prometheus"},{"location":"performance/#opentelemetry-dynatrace-e-prometheus-observabilidade-aprimorada","text":"Explore as ferramentas que elevam a observabilidade do seu sistema, permitindo monitorar, rastrear e analisar o desempenho de suas aplica\u00e7\u00f5es de forma abrangente.","title":"OpenTelemetry, Dynatrace e Prometheus: Observabilidade Aprimorada"},{"location":"performance/#opentelemetry","text":"OpenTelemetry \u00e9 um conjunto de APIs, SDKs, ferramentas e integra\u00e7\u00f5es que permite instrumentar, gerar, coletar e exportar dados de telemetria (traces, m\u00e9tricas e logs) para an\u00e1lise. Padr\u00e3o aberto e independente de fornecedor Coleta de dados de telemetria completa Integra\u00e7\u00e3o com diversas ferramentas de observabilidade","title":"OpenTelemetry"},{"location":"performance/#dynatrace","text":"Dynatrace \u00e9 uma plataforma de observabilidade completa que oferece monitoramento de aplica\u00e7\u00f5es, infraestrutura, experi\u00eancia do usu\u00e1rio e an\u00e1lise de neg\u00f3cios. Monitoramento full-stack Detec\u00e7\u00e3o autom\u00e1tica de problemas An\u00e1lise de causa raiz com intelig\u00eancia artificial","title":"Dynatrace"},{"location":"performance/#prometheus","text":"Prometheus \u00e9 um sistema de monitoramento e alerta de c\u00f3digo aberto, projetado para coletar m\u00e9tricas de s\u00e9ries temporais. Coleta de m\u00e9tricas em tempo real Linguagem de consulta poderosa (PromQL) Alertas flex\u00edveis","title":"Prometheus"},{"location":"performance/#influxdb-e-prometheus-com-docker-rapido-e-facil","text":"Inicie rapidamente uma inst\u00e2ncia do InfluxDB e Prometheus usando o Docker e explore o exemplo de c\u00f3digo em Python para enviar m\u00e9tricas:","title":"InfluxDB e Prometheus com Docker: R\u00e1pido e F\u00e1cil"},{"location":"performance/#comando-docker","text":"docker run -d -p 8086 :8086 --name my-influxdb influxdb:latest docker run -d -p 9090 :9090 --name prometheus -v C:/Users/Intelii/source/repos/aulatal/prometheus.yml:/etc/prometheus/prometheus.yml prom/prometheus","title":"Comando Docker"},{"location":"performance/#codigo-python-apppy","text":"from flask import Flask from prometheus_client import Gauge , start_http_server from influxdb_client import InfluxDBClient , Point , WritePrecision from influxdb_client.client.write_api import SYNCHRONOUS import random import time from dotenv import load_dotenv import os from threading import Thread # Carrega as vari\u00e1veis de ambiente do arquivo .env load_dotenv () app = Flask ( __name__ ) # Conex\u00e3o com o InfluxDB (lendo do .env) influx_url = os . getenv ( 'INFLUXDB_URL' ) influx_token = os . getenv ( 'INFLUXDB_TOKEN' ) influx_org = os . getenv ( 'INFLUXDB_ORG' ) influx_bucket = os . getenv ( 'INFLUXDB_BUCKET' ) try : client = InfluxDBClient ( url = influx_url , token = influx_token , org = influx_org ) write_api = client . write_api ( write_options = SYNCHRONOUS ) except Exception as e : print ( f \"Erro ao conectar ao InfluxDB: { e } \" ) exit ( 1 ) # Encerra o aplicativo se n\u00e3o conseguir conectar ao InfluxDB # M\u00e9tricas temperature = Gauge ( 'temperature_celsius' , 'Temperature in Celsius' ) humidity = Gauge ( 'humidity_percent' , 'Humidity in Percentage' ) pressure = Gauge ( 'pressure_hpa' , 'Pressure in hPa' ) @app . route ( '/' ) def index (): return \"Hello, World!\" def generate_metrics (): while True : temp_value = random . uniform ( 15 , 35 ) humidity_value = random . uniform ( 40 , 80 ) pressure_value = random . uniform ( 980 , 1030 ) temperature . set ( temp_value ) humidity . set ( humidity_value ) pressure . set ( pressure_value ) print ( f \"Metrics updated - Temperature: { temp_value } \u00b0C, Humidity: { humidity_value } %, Pressure: { pressure_value } hPa\" ) point = Point ( \"metrics\" ) . tag ( \"host\" , \"server01\" ) . \\ field ( \"temperature\" , temp_value ) . \\ field ( \"humidity\" , humidity_value ) . \\ field ( \"pressure\" , pressure_value ) . \\ time ( int ( time . time_ns ()), WritePrecision . NS ) try : write_api . write ( bucket = influx_bucket , org = influx_org , record = point ) print ( f \"Metrics sent to InfluxDB - Temperature: { temp_value } \u00b0C, Humidity: { humidity_value } %, Pressure: { pressure_value } hPa\" ) except Exception as e : print ( f \"Erro ao escrever no InfluxDB: { e } \" ) time . sleep ( 1 ) if __name__ == '__main__' : start_http_server ( 8000 ) # Inicia o servidor de m\u00e9tricas Prometheus na porta 8000 print ( \"Prometheus metrics server started on port 8000\" ) metrics_thread = Thread ( target = generate_metrics ) metrics_thread . start () app . run ( host = '0.0.0.0' , port = 5000 ) print ( \"Flask server started on port 5000\" )","title":"C\u00f3digo Python (app.py)"},{"location":"performance/#env","text":"INFLUXDB_URL=http://localhost:8086 INFLUXDB_TOKEN= INFLUXDB_ORG= INFLUXDB_BUCKET=","title":".env"},{"location":"performance/#prometheusyml","text":"global : scrape_interval : 15s # Intervalo de coleta de m\u00e9tricas scrape_configs : - job_name : 'flask_app' static_configs : - targets : [ 'host.docker.internal:8000' ]","title":"prometheus.yml"},{"location":"performance/#requirementstxt","text":"Flask prometheus_client influxdb-client python-dotenv","title":"requirements.txt"},{"location":"performance/#aplicando-a-aprendizagem-baseada-em-times-tbl-com-autoestudo-ponderado","text":"Agora \u00e9 hora de colocar em pr\u00e1tica o que voc\u00ea aprendeu sobre m\u00e9tricas, logs e observabilidade! Nesta atividade TBL, voc\u00ea trabalhar\u00e1 em equipes mistas para aplicar o autoestudo \"Como extrair boas m\u00e9tricas da sua aplica\u00e7\u00e3o\" em um projeto pr\u00e1tico.","title":"Aplicando a Aprendizagem Baseada em Times (TBL) com Autoestudo Ponderado"},{"location":"performance/#desafio-tbl","text":"Seu time dever\u00e1 aplicar ao seu projeto. Utilizando os conceitos de m\u00e9tricas, logs e as ferramentas apresentadas (InfluxDB, Prometheus, Grafana, OpenTelemetry), voc\u00eas dever\u00e3o: Coletar m\u00e9tricas relevantes da aplica\u00e7\u00e3o. Implementar o Prometheus para coletar e armazenar as m\u00e9tricas. Configurar o Grafana para visualizar as m\u00e9tricas em dashboards. Documentar todo o processo em um arquivo README.md, incluindo: Passo a passo detalhado da implementa\u00e7\u00e3o. Prints das m\u00e9tricas coletadas e dos dashboards do Grafana. Explica\u00e7\u00f5es claras e objetivas sobre as decis\u00f5es tomadas. Uso de commits sem\u00e2nticos para facilitar o acompanhamento do desenvolvimento.","title":"Desafio TBL:"},{"location":"performance/#instrucoes-completas-do-desafio-tbl","text":"Descri\u00e7\u00e3o: Como extrair boas m\u00e9tricas da sua aplica\u00e7\u00e3o Conte\u00fados Relacionados: Coletando M\u00e9tricas Pergunta: Crie um reposit\u00f3rio para armazenar os c\u00f3digos gerados no autoestudo. Siga o passo a passo, implementando a coleta de m\u00e9tricas, implementa\u00e7\u00e3o do Prometheus e Grafana. Documente o passo a passo em arquivo readme de forma que possa ser reproduzido posteriormente. Utilize prints e texto de forma clara, objetiva e coesa. Crie uma se\u00e7\u00e3o demonstrando os gr\u00e1ficos em funcionamento. Barema: Codifica\u00e7\u00e3o de todas as etapas - 3 pontos C\u00f3digo e Testes compilando e executando sem erros - 2 pontos M\u00e9tricas coletadas e evidenciadas no relat\u00f3rio - 2 pontos Commit sem\u00e2ntico e Organiza\u00e7\u00e3o do relat\u00f3rio - 1 ponto Relat\u00f3rio em markdown escrito de forma clara, concisa e objetiva - 2 pontos","title":"Instru\u00e7\u00f5es Completas do Desafio TBL"},{"location":"performance/#autoestudo-ponderado","text":"","title":"Autoestudo Ponderado"},{"location":"performance/#sua-opiniao-e-importante","text":"Deixe seu feedback com estrelas e coment\u00e1rios e ajude-nos a melhorar o Inteli e o curso de ES.","title":"Sua Opini\u00e3o \u00e9 Importante!"},{"location":"skills/","text":"Roadmap das Aulas \u00b6 Confira o cronograma das aulas e os t\u00f3picos que ser\u00e3o abordados: Improve your coding skills \u00b6 Curso Semana Pontua\u00e7\u00e3o Como voc\u00ea melhora suas habilidades de programa\u00e7\u00e3o? Semana 10 0 How To Be A GREAT Programmer Semana 10 0 Object-Oriented Programming Semana 10 0 Tutorial de Orienta\u00e7\u00e3o a Objetos com Python \u00b6 Passo 1: Classes e Objetos \u00b6 Em Python, uma classe \u00e9 um modelo para criar objetos (inst\u00e2ncias). Pense em uma classe como um projeto para uma casa, e objetos como as casas constru\u00eddas a partir desse projeto. class Cachorro : def __init__ ( self , nome , raca ): self . nome = nome self . raca = raca def latir ( self ): print ( \"Au au!\" ) Neste exemplo, Cachorro \u00e9 a classe, e meu_cachorro = Cachorro(\"Rex\", \"Labrador\") cria um objeto da classe Cachorro . Passo 2: Atributos \u00b6 Atributos s\u00e3o as caracter\u00edsticas de um objeto. No exemplo acima, nome e raca s\u00e3o atributos da classe Cachorro . print ( meu_cachorro . nome ) # Sa\u00edda: Rex print ( meu_cachorro . raca ) # Sa\u00edda: Labrador Passo 3: M\u00e9todos \u00b6 M\u00e9todos s\u00e3o as a\u00e7\u00f5es que um objeto pode realizar. No exemplo, latir() \u00e9 um m\u00e9todo da classe Cachorro . meu_cachorro . latir () # Sa\u00edda: Au au! Tutorial de Orienta\u00e7\u00e3o a Objetos com C \u00b6 Passo 1: Classes e Objetos \u00b6 Em C#, uma classe \u00e9 um modelo para criar objetos (inst\u00e2ncias). Uma classe define as propriedades (dados) e m\u00e9todos (comportamentos) que os objetos ter\u00e3o. public class Cachorro { public string Nome { get ; set ; } public string Raca { get ; set ; } public void Latir () { Console . WriteLine ( \"Au au!\" ); } } Neste exemplo, Cachorro \u00e9 a classe, e Cachorro meuCachorro = new Cachorro(\"Rex\", \"Labrador\"); cria um objeto da classe Cachorro . Passo 2: Propriedades \u00b6 Propriedades s\u00e3o as caracter\u00edsticas de um objeto. No exemplo acima, Nome e Raca s\u00e3o propriedades da classe Cachorro . Console . WriteLine ( meuCachorro . Nome ); // Sa\u00edda: Rex Console . WriteLine ( meuCachorro . Raca ); // Sa\u00edda: Labrador Passo 3: M\u00e9todos \u00b6 M\u00e9todos s\u00e3o as a\u00e7\u00f5es que um objeto pode realizar. No exemplo, Latir() \u00e9 um m\u00e9todo da classe Cachorro . meuCachorro . Latir (); // Sa\u00edda: Au au! An\u00e1lise de Projeto: Padr\u00f5es de Reposit\u00f3rio com Orienta\u00e7\u00e3o a Objetos \u00b6 Explore o reposit\u00f3rio \"aula_dotnet_cars\" e aprenda sobre a aplica\u00e7\u00e3o de padr\u00f5es de reposit\u00f3rio em projetos C# com orienta\u00e7\u00e3o a objetos. Acessar Reposit\u00f3rio Desafio de Orienta\u00e7\u00e3o a Objetos com Python \u00b6 Sistema de Gerenciamento de Biblioteca \u00b6 Voc\u00ea foi contratado para desenvolver um sistema de gerenciamento de biblioteca usando orienta\u00e7\u00e3o a objetos em Python. O sistema deve permitir: Gerenciar livros: Adicionar, remover e listar livros. Cada livro possui t\u00edtulo, autor, ISBN e status (dispon\u00edvel ou emprestado). Gerenciar usu\u00e1rios: Adicionar, remover e listar usu\u00e1rios. Cada usu\u00e1rio possui nome, ID e lista de livros emprestados. Empr\u00e9stimo de livros: Registrar o empr\u00e9stimo de um livro para um usu\u00e1rio e a data de devolu\u00e7\u00e3o prevista. Devolu\u00e7\u00e3o de livros: Registrar a devolu\u00e7\u00e3o de um livro e atualizar o status do livro para dispon\u00edvel. Requisitos \u00b6 Crie as classes Livro , Usuario e Biblioteca . Implemente os m\u00e9todos necess\u00e1rios para cada classe, como: Livro : __init__ , emprestar , devolver Usuario : __init__ , pegar_emprestado , devolver_livro Biblioteca : __init__ , adicionar_livro , remover_livro , adicionar_usuario , remover_usuario , emprestar_livro , devolver_livro , listar_livros , listar_usuarios Utilize atributos para armazenar as informa\u00e7\u00f5es de cada objeto. Utilize listas para armazenar os livros da biblioteca e os livros emprestados por cada usu\u00e1rio. Crie um menu interativo para o usu\u00e1rio, permitindo que ele realize as opera\u00e7\u00f5es do sistema. Dicas \u00b6 Utilize o conceito de encapsulamento para proteger os atributos das classes e garantir a integridade dos dados. Utilize o conceito de heran\u00e7a para criar classes mais especializadas, como LivroEmprestado que herda de Livro e adiciona a data de devolu\u00e7\u00e3o. Utilize o conceito de polimorfismo para criar m\u00e9todos com o mesmo nome em diferentes classes, como emprestar em Livro e pegar_emprestado em Usuario . B\u00f4nus \u00b6 Implemente um sistema de multas para livros devolvidos com atraso. Crie um sistema de reservas para livros que n\u00e3o est\u00e3o dispon\u00edveis no momento. Implemente um sistema de busca para encontrar livros por t\u00edtulo, autor ou ISBN. Exemplo de uso \u00b6 biblioteca = Biblioteca () livro1 = Livro ( \"O Senhor dos An\u00e9is\" , \"J.R.R. Tolkien\" , \"9788533613110\" ) livro2 = Livro ( \"Harry Potter e a Pedra Filosofal\" , \"J.K. Rowling\" , \"9788532511010\" ) biblioteca . adicionar_livro ( livro1 ) biblioteca . adicionar_livro ( livro2 ) usuario1 = Usuario ( \"Jo\u00e3o Silva\" , 12345 ) biblioteca . adicionar_usuario ( usuario1 ) Indica\u00e7\u00f5es \u00b6 # Indica\u00e7\u00f5es Link 1 Design Patterns Post no tabnews 2 Padr\u00f5es de Nomes Post no tabnews 3 Refactoring Guru Site Precisa de Ajuda? \u00b6 Estou aqui para te ajudar com os artefatos. Se voc\u00ea tiver alguma d\u00favida ou precisar de orienta\u00e7\u00e3o, n\u00e3o hesite em me procurar. Sua Opini\u00e3o \u00e9 Importante! \u00b6 Deixe seu feedback com estrelas e coment\u00e1rios e ajude-nos a melhorar o Inteli e o curso.","title":"Roadmap das Aulas"},{"location":"skills/#roadmap-das-aulas","text":"Confira o cronograma das aulas e os t\u00f3picos que ser\u00e3o abordados:","title":"Roadmap das Aulas"},{"location":"skills/#improve-your-coding-skills","text":"Curso Semana Pontua\u00e7\u00e3o Como voc\u00ea melhora suas habilidades de programa\u00e7\u00e3o? Semana 10 0 How To Be A GREAT Programmer Semana 10 0 Object-Oriented Programming Semana 10 0","title":"Improve your coding skills"},{"location":"skills/#tutorial-de-orientacao-a-objetos-com-python","text":"","title":"Tutorial de Orienta\u00e7\u00e3o a Objetos com Python"},{"location":"skills/#passo-1-classes-e-objetos","text":"Em Python, uma classe \u00e9 um modelo para criar objetos (inst\u00e2ncias). Pense em uma classe como um projeto para uma casa, e objetos como as casas constru\u00eddas a partir desse projeto. class Cachorro : def __init__ ( self , nome , raca ): self . nome = nome self . raca = raca def latir ( self ): print ( \"Au au!\" ) Neste exemplo, Cachorro \u00e9 a classe, e meu_cachorro = Cachorro(\"Rex\", \"Labrador\") cria um objeto da classe Cachorro .","title":"Passo 1: Classes e Objetos"},{"location":"skills/#passo-2-atributos","text":"Atributos s\u00e3o as caracter\u00edsticas de um objeto. No exemplo acima, nome e raca s\u00e3o atributos da classe Cachorro . print ( meu_cachorro . nome ) # Sa\u00edda: Rex print ( meu_cachorro . raca ) # Sa\u00edda: Labrador","title":"Passo 2: Atributos"},{"location":"skills/#passo-3-metodos","text":"M\u00e9todos s\u00e3o as a\u00e7\u00f5es que um objeto pode realizar. No exemplo, latir() \u00e9 um m\u00e9todo da classe Cachorro . meu_cachorro . latir () # Sa\u00edda: Au au!","title":"Passo 3: M\u00e9todos"},{"location":"skills/#tutorial-de-orientacao-a-objetos-com-c","text":"","title":"Tutorial de Orienta\u00e7\u00e3o a Objetos com C"},{"location":"skills/#passo-1-classes-e-objetos_1","text":"Em C#, uma classe \u00e9 um modelo para criar objetos (inst\u00e2ncias). Uma classe define as propriedades (dados) e m\u00e9todos (comportamentos) que os objetos ter\u00e3o. public class Cachorro { public string Nome { get ; set ; } public string Raca { get ; set ; } public void Latir () { Console . WriteLine ( \"Au au!\" ); } } Neste exemplo, Cachorro \u00e9 a classe, e Cachorro meuCachorro = new Cachorro(\"Rex\", \"Labrador\"); cria um objeto da classe Cachorro .","title":"Passo 1: Classes e Objetos"},{"location":"skills/#passo-2-propriedades","text":"Propriedades s\u00e3o as caracter\u00edsticas de um objeto. No exemplo acima, Nome e Raca s\u00e3o propriedades da classe Cachorro . Console . WriteLine ( meuCachorro . Nome ); // Sa\u00edda: Rex Console . WriteLine ( meuCachorro . Raca ); // Sa\u00edda: Labrador","title":"Passo 2: Propriedades"},{"location":"skills/#passo-3-metodos_1","text":"M\u00e9todos s\u00e3o as a\u00e7\u00f5es que um objeto pode realizar. No exemplo, Latir() \u00e9 um m\u00e9todo da classe Cachorro . meuCachorro . Latir (); // Sa\u00edda: Au au!","title":"Passo 3: M\u00e9todos"},{"location":"skills/#analise-de-projeto-padroes-de-repositorio-com-orientacao-a-objetos","text":"Explore o reposit\u00f3rio \"aula_dotnet_cars\" e aprenda sobre a aplica\u00e7\u00e3o de padr\u00f5es de reposit\u00f3rio em projetos C# com orienta\u00e7\u00e3o a objetos. Acessar Reposit\u00f3rio","title":"An\u00e1lise de Projeto: Padr\u00f5es de Reposit\u00f3rio com Orienta\u00e7\u00e3o a Objetos"},{"location":"skills/#desafio-de-orientacao-a-objetos-com-python","text":"","title":"Desafio de Orienta\u00e7\u00e3o a Objetos com Python"},{"location":"skills/#sistema-de-gerenciamento-de-biblioteca","text":"Voc\u00ea foi contratado para desenvolver um sistema de gerenciamento de biblioteca usando orienta\u00e7\u00e3o a objetos em Python. O sistema deve permitir: Gerenciar livros: Adicionar, remover e listar livros. Cada livro possui t\u00edtulo, autor, ISBN e status (dispon\u00edvel ou emprestado). Gerenciar usu\u00e1rios: Adicionar, remover e listar usu\u00e1rios. Cada usu\u00e1rio possui nome, ID e lista de livros emprestados. Empr\u00e9stimo de livros: Registrar o empr\u00e9stimo de um livro para um usu\u00e1rio e a data de devolu\u00e7\u00e3o prevista. Devolu\u00e7\u00e3o de livros: Registrar a devolu\u00e7\u00e3o de um livro e atualizar o status do livro para dispon\u00edvel.","title":"Sistema de Gerenciamento de Biblioteca"},{"location":"skills/#requisitos","text":"Crie as classes Livro , Usuario e Biblioteca . Implemente os m\u00e9todos necess\u00e1rios para cada classe, como: Livro : __init__ , emprestar , devolver Usuario : __init__ , pegar_emprestado , devolver_livro Biblioteca : __init__ , adicionar_livro , remover_livro , adicionar_usuario , remover_usuario , emprestar_livro , devolver_livro , listar_livros , listar_usuarios Utilize atributos para armazenar as informa\u00e7\u00f5es de cada objeto. Utilize listas para armazenar os livros da biblioteca e os livros emprestados por cada usu\u00e1rio. Crie um menu interativo para o usu\u00e1rio, permitindo que ele realize as opera\u00e7\u00f5es do sistema.","title":"Requisitos"},{"location":"skills/#dicas","text":"Utilize o conceito de encapsulamento para proteger os atributos das classes e garantir a integridade dos dados. Utilize o conceito de heran\u00e7a para criar classes mais especializadas, como LivroEmprestado que herda de Livro e adiciona a data de devolu\u00e7\u00e3o. Utilize o conceito de polimorfismo para criar m\u00e9todos com o mesmo nome em diferentes classes, como emprestar em Livro e pegar_emprestado em Usuario .","title":"Dicas"},{"location":"skills/#bonus","text":"Implemente um sistema de multas para livros devolvidos com atraso. Crie um sistema de reservas para livros que n\u00e3o est\u00e3o dispon\u00edveis no momento. Implemente um sistema de busca para encontrar livros por t\u00edtulo, autor ou ISBN.","title":"B\u00f4nus"},{"location":"skills/#exemplo-de-uso","text":"biblioteca = Biblioteca () livro1 = Livro ( \"O Senhor dos An\u00e9is\" , \"J.R.R. Tolkien\" , \"9788533613110\" ) livro2 = Livro ( \"Harry Potter e a Pedra Filosofal\" , \"J.K. Rowling\" , \"9788532511010\" ) biblioteca . adicionar_livro ( livro1 ) biblioteca . adicionar_livro ( livro2 ) usuario1 = Usuario ( \"Jo\u00e3o Silva\" , 12345 ) biblioteca . adicionar_usuario ( usuario1 )","title":"Exemplo de uso"},{"location":"skills/#indicacoes","text":"# Indica\u00e7\u00f5es Link 1 Design Patterns Post no tabnews 2 Padr\u00f5es de Nomes Post no tabnews 3 Refactoring Guru Site","title":"Indica\u00e7\u00f5es"},{"location":"skills/#precisa-de-ajuda","text":"Estou aqui para te ajudar com os artefatos. Se voc\u00ea tiver alguma d\u00favida ou precisar de orienta\u00e7\u00e3o, n\u00e3o hesite em me procurar.","title":"Precisa de Ajuda?"},{"location":"skills/#sua-opiniao-e-importante","text":"Deixe seu feedback com estrelas e coment\u00e1rios e ajude-nos a melhorar o Inteli e o curso.","title":"Sua Opini\u00e3o \u00e9 Importante!"},{"location":"sre/","text":"Roadmap das Aulas \u00b6 Confira o cronograma das aulas e os t\u00f3picos que ser\u00e3o abordados: SRE: Voc\u00ea est\u00e1 fazendo isso errado! \u00b6 Curso Semana Pontua\u00e7\u00e3o Princ\u00edpios e pr\u00e1ticas fundamentais da SRE: ciclos virtuosos Semana 09 0 Princ\u00edpios e pr\u00e1ticas fundamentais da SRE: O lado humano da SRE Semana 09 0 SRE na pr\u00e1tica. Como as empresas tem usado essa disciplina na pr\u00e1tica? Semana 09 0 Site Reliability Engineer (SRE) Semana 09 0 Reposit\u00f3rio GitHub \u00b6 Reposit\u00f3rio GitHub - Django com Render Vamos ver se voc\u00eas est\u00e3o fazendo Autoestudos! \u00b6 Prepare-se para o quiz! Jogar Kahoot! SRE (Site Reliability Engineering) \u00b6 Explorando a Engenharia de Confiabilidade de Sites Principais Conceitos \u00b6 Automatiza\u00e7\u00e3o: Elimina\u00e7\u00e3o de trabalho manual repetitivo para aumentar a efici\u00eancia e reduzir erros. Monitoramento e Observabilidade: Coleta de dados e m\u00e9tricas para entender o comportamento do sistema e identificar problemas. Gerenciamento de Incidentes: Processos para responder e resolver incidentes de forma r\u00e1pida e eficaz. Engenharia de Capacidade: Garantia de que o sistema tenha recursos suficientes para atender \u00e0 demanda. Gerenciamento de Mudan\u00e7as: Implementa\u00e7\u00e3o de mudan\u00e7as de forma controlada para minimizar o risco de interrup\u00e7\u00f5es. Benef\u00edcios \u00b6 Maior confiabilidade e disponibilidade do sistema. Redu\u00e7\u00e3o do tempo de inatividade e interrup\u00e7\u00f5es. Melhora da escalabilidade e desempenho do sistema. Maior efici\u00eancia operacional e redu\u00e7\u00e3o de custos. Melhora da colabora\u00e7\u00e3o entre equipes de desenvolvimento e opera\u00e7\u00f5es. Tecnologias Essenciais para SRE \u00b6 Ferramentas que capacitam a Engenharia de Confiabilidade de Sites Kubernetes \u00b6 Plataforma open source para automatizar a implanta\u00e7\u00e3o, o dimensionamento e o gerenciamento de aplicativos em cont\u00eaineres. Saiba mais Rancher \u00b6 Plataforma completa de gerenciamento de Kubernetes que facilita a opera\u00e7\u00e3o de clusters em qualquer lugar. Saiba mais Terraform \u00b6 Ferramenta de c\u00f3digo aberto para provisionar e gerenciar infraestrutura em nuvem de forma segura e eficiente. Saiba mais Ansible \u00b6 Ferramenta de automa\u00e7\u00e3o de TI que simplifica tarefas como provisionamento em nuvem, gerenciamento de configura\u00e7\u00e3o e implanta\u00e7\u00e3o de aplicativos. Saiba mais Tutorial de Instala\u00e7\u00e3o e Configura\u00e7\u00e3o do Minikube no Windows \u00b6 Passo 1: Instalar Depend\u00eancias \u00b6 Primeiro, instale o Docker para Windows. Baixe e instale o Docker Desktop no site oficial: Baixar Docker Desktop Ap\u00f3s a instala\u00e7\u00e3o, inicie o Docker Desktop e certifique-se de que est\u00e1 rodando. Passo 2: Instalar o Minikube \u00b6 Baixe e instale o Minikube: Invoke-WebRequest -Uri \"https://storage.googleapis.com/minikube/releases/latest/minikube-installer.exe\" -OutFile \"minikube-installer.exe\" Start-Process -FilePath \".\\minikube-installer.exe\" -Wait Passo 3: Iniciar o Minikube \u00b6 Inicie o Minikube: minikube start - -driver = docker Passo 4: Instalar o Kubectl \u00b6 Baixe e instale o Kubectl: Invoke-WebRequest -Uri \"https://dl.k8s.io/release/v1.23.0/bin/windows/amd64/kubectl.exe\" -OutFile \"kubectl.exe\" $env:Path += \";$pwd\" kubectl version - -client Passo 5: Criar Aplica\u00e7\u00e3o Flask \u00b6 Crie uma aplica\u00e7\u00e3o Flask simples. Crie um diret\u00f3rio para o projeto e um arquivo app.py : mkdir flask-app cd flask-app New-Item -Path . -Name \"app.py\" -ItemType \"file\" Adicione o seguinte conte\u00fado ao app.py : from flask import Flask app = Flask ( __name__ ) @app . route ( '/' ) def hello (): return \"Hello, World!\" if __name__ == '__main__' : app . run ( host = '0.0.0.0' , port = 5000 ) Crie um arquivo requirements.txt : New-Item -Path . -Name \"requirements.txt\" -ItemType \"file\" Adicione o seguinte conte\u00fado: Flask==2.1.1 Passo 6: Criar Dockerfile \u00b6 Crie um arquivo Dockerfile com o seguinte conte\u00fado: New-Item -Path . -Name \"Dockerfile\" -ItemType \"file\" Set-Content -Path \"Dockerfile\" -Value @\" FROM python:3.9-slim WORKDIR /app COPY requirements.txt requirements.txt RUN pip install -r requirements.txt COPY . . CMD [\"python\", \"app.py\"] \"@ Passo 7: Construir e Enviar a Imagem Docker \u00b6 Construa a imagem Docker: minikube -p minikube docker-env | Invoke-Expression docker build -t flask-app : latest . Passo 8: Criar Manifests do Kubernetes \u00b6 Crie um arquivo deployment.yaml : New-Item -Path . -Name \"deployment.yaml\" -ItemType \"file\" Adicione o seguinte conte\u00fado: apiVersion : apps/v1 kind : Deployment metadata : name : flask-app spec : replicas : 3 selector : matchLabels : app : flask-app template : metadata : labels : app : flask-app spec : containers : - name : flask-app image : flask-app:latest imagePullPolicy : Never ports : - containerPort : 5000 Crie um arquivo service.yaml : New-Item -Path . -Name \"service.yaml\" -ItemType \"file\" Adicione o seguinte conte\u00fado: apiVersion : v1 kind : Service metadata : name : flask-app spec : type : NodePort selector : app : flask-app ports : - protocol : TCP port : 5000 targetPort : 5000 nodePort : 30007 Passo 9: Aplicar Manifests do Kubernetes \u00b6 Aplique os arquivos de configura\u00e7\u00e3o: kubectl apply -f deployment . yaml kubectl apply -f service . yaml Passo 10: Verificar os Pods e Servi\u00e7o \u00b6 Verifique os pods: kubectl get pods Verifique o servi\u00e7o: kubectl get svc Passo 11: Obter URL de Acesso \u00b6 Obtenha a URL de acesso: minikube service flask-app - -url Abra a URL no navegador para ver a aplica\u00e7\u00e3o Flask em execu\u00e7\u00e3o. Passo 12: Ver o Minikube Dashboard \u00b6 Inicie o Minikube dashboard: minikube dashboard Acesse a URL fornecida para visualizar o dashboard. Como se Tornar um Excelente SRE \u00b6 Introdu\u00e7\u00e3o ao SRE \u00b6 Um Site Reliability Engineer (SRE) \u00e9 respons\u00e1vel por garantir a confiabilidade e disponibilidade dos sistemas em produ\u00e7\u00e3o. Aqui est\u00e3o os passos essenciais para se tornar um excelente SRE. 1. Compreender os Fundamentos \u00b6 \u00c9 crucial ter uma forte compreens\u00e3o dos fundamentos de computa\u00e7\u00e3o e redes, incluindo sistemas operacionais, redes, protocolos de comunica\u00e7\u00e3o e arquitetura de sistemas distribu\u00eddos. Estude conceitos de sistemas operacionais como processos, threads, gerenciamento de mem\u00f3ria e sistemas de arquivos. Aprenda sobre redes, incluindo TCP/IP, DNS, HTTP/HTTPS e firewalls. 2. Aprender Programa\u00e7\u00e3o e Automa\u00e7\u00e3o \u00b6 A automa\u00e7\u00e3o \u00e9 uma parte vital do SRE. Familiarize-se com linguagens de programa\u00e7\u00e3o como Python, Go, ou Ruby, e ferramentas de automa\u00e7\u00e3o como Ansible, Puppet, e Chef. Desenvolva scripts para automatizar tarefas repetitivas. Crie e gerencie pipelines de CI/CD. 3. Conhecer Ferramentas de Monitoramento e Logging \u00b6 Um SRE deve ser proficiente em monitoramento e logging para detectar e solucionar problemas rapidamente. Aprenda a usar ferramentas como Prometheus, Grafana, ELK Stack (Elasticsearch, Logstash, Kibana), e Splunk. Configure alertas para monitorar a sa\u00fade dos sistemas. 4. Dominar Cloud e Cont\u00eaineres \u00b6 O conhecimento em tecnologias de cloud e cont\u00eaineres \u00e9 essencial. Estude servi\u00e7os de cloud como AWS, Google Cloud, e Azure. Aprenda a usar cont\u00eaineres com Docker e orquestra\u00e7\u00e3o de cont\u00eaineres com Kubernetes. 5. Praticar Resolu\u00e7\u00e3o de Problemas e Resili\u00eancia \u00b6 Desenvolva habilidades de resolu\u00e7\u00e3o de problemas e melhore a resili\u00eancia dos sistemas. Realize exerc\u00edcios de Chaos Engineering para testar a resili\u00eancia dos sistemas. Participe de simula\u00e7\u00f5es de incidentes para praticar a resposta a incidentes. 6. Focar na Cultura e Comunica\u00e7\u00e3o \u00b6 Um excelente SRE deve promover uma cultura de colabora\u00e7\u00e3o e comunica\u00e7\u00e3o eficaz. Trabalhe em estreita colabora\u00e7\u00e3o com equipes de desenvolvimento e opera\u00e7\u00f5es. Participe de revis\u00f5es p\u00f3s-incidente (Postmortems) para identificar \u00e1reas de melhoria. Recursos Adicionais \u00b6 Para aprofundar seus conhecimentos em DevOps e Seguran\u00e7a da Informa\u00e7\u00e3o, explore os seguintes recursos: Trilha de DevOps Trilha de Seguran\u00e7a da Informa\u00e7\u00e3o Conclus\u00e3o \u00b6 Tornar-se um excelente SRE requer uma combina\u00e7\u00e3o de habilidades t\u00e9cnicas e soft skills. Continuar aprendendo e se adaptando \u00e0s novas tecnologias e pr\u00e1ticas \u00e9 essencial para o sucesso nesta carreira. Sua Opini\u00e3o \u00e9 Importante! \u00b6 Deixe seu feedback com estrelas e coment\u00e1rios e ajude-nos a melhorar o Inteli e o curso.","title":"Roadmap das Aulas"},{"location":"sre/#roadmap-das-aulas","text":"Confira o cronograma das aulas e os t\u00f3picos que ser\u00e3o abordados:","title":"Roadmap das Aulas"},{"location":"sre/#sre-voce-esta-fazendo-isso-errado","text":"Curso Semana Pontua\u00e7\u00e3o Princ\u00edpios e pr\u00e1ticas fundamentais da SRE: ciclos virtuosos Semana 09 0 Princ\u00edpios e pr\u00e1ticas fundamentais da SRE: O lado humano da SRE Semana 09 0 SRE na pr\u00e1tica. Como as empresas tem usado essa disciplina na pr\u00e1tica? Semana 09 0 Site Reliability Engineer (SRE) Semana 09 0","title":"SRE: Voc\u00ea est\u00e1 fazendo isso errado!"},{"location":"sre/#repositorio-github","text":"Reposit\u00f3rio GitHub - Django com Render","title":"Reposit\u00f3rio GitHub"},{"location":"sre/#vamos-ver-se-voces-estao-fazendo-autoestudos","text":"Prepare-se para o quiz! Jogar Kahoot!","title":"Vamos ver se voc\u00eas est\u00e3o fazendo Autoestudos!"},{"location":"sre/#sre-site-reliability-engineering","text":"Explorando a Engenharia de Confiabilidade de Sites","title":"SRE (Site Reliability Engineering)"},{"location":"sre/#principais-conceitos","text":"Automatiza\u00e7\u00e3o: Elimina\u00e7\u00e3o de trabalho manual repetitivo para aumentar a efici\u00eancia e reduzir erros. Monitoramento e Observabilidade: Coleta de dados e m\u00e9tricas para entender o comportamento do sistema e identificar problemas. Gerenciamento de Incidentes: Processos para responder e resolver incidentes de forma r\u00e1pida e eficaz. Engenharia de Capacidade: Garantia de que o sistema tenha recursos suficientes para atender \u00e0 demanda. Gerenciamento de Mudan\u00e7as: Implementa\u00e7\u00e3o de mudan\u00e7as de forma controlada para minimizar o risco de interrup\u00e7\u00f5es.","title":"Principais Conceitos"},{"location":"sre/#beneficios","text":"Maior confiabilidade e disponibilidade do sistema. Redu\u00e7\u00e3o do tempo de inatividade e interrup\u00e7\u00f5es. Melhora da escalabilidade e desempenho do sistema. Maior efici\u00eancia operacional e redu\u00e7\u00e3o de custos. Melhora da colabora\u00e7\u00e3o entre equipes de desenvolvimento e opera\u00e7\u00f5es.","title":"Benef\u00edcios"},{"location":"sre/#tecnologias-essenciais-para-sre","text":"Ferramentas que capacitam a Engenharia de Confiabilidade de Sites","title":"Tecnologias Essenciais para SRE"},{"location":"sre/#kubernetes","text":"Plataforma open source para automatizar a implanta\u00e7\u00e3o, o dimensionamento e o gerenciamento de aplicativos em cont\u00eaineres. Saiba mais","title":"Kubernetes"},{"location":"sre/#rancher","text":"Plataforma completa de gerenciamento de Kubernetes que facilita a opera\u00e7\u00e3o de clusters em qualquer lugar. Saiba mais","title":"Rancher"},{"location":"sre/#terraform","text":"Ferramenta de c\u00f3digo aberto para provisionar e gerenciar infraestrutura em nuvem de forma segura e eficiente. Saiba mais","title":"Terraform"},{"location":"sre/#ansible","text":"Ferramenta de automa\u00e7\u00e3o de TI que simplifica tarefas como provisionamento em nuvem, gerenciamento de configura\u00e7\u00e3o e implanta\u00e7\u00e3o de aplicativos. Saiba mais","title":"Ansible"},{"location":"sre/#tutorial-de-instalacao-e-configuracao-do-minikube-no-windows","text":"","title":"Tutorial de Instala\u00e7\u00e3o e Configura\u00e7\u00e3o do Minikube no Windows"},{"location":"sre/#passo-1-instalar-dependencias","text":"Primeiro, instale o Docker para Windows. Baixe e instale o Docker Desktop no site oficial: Baixar Docker Desktop Ap\u00f3s a instala\u00e7\u00e3o, inicie o Docker Desktop e certifique-se de que est\u00e1 rodando.","title":"Passo 1: Instalar Depend\u00eancias"},{"location":"sre/#passo-2-instalar-o-minikube","text":"Baixe e instale o Minikube: Invoke-WebRequest -Uri \"https://storage.googleapis.com/minikube/releases/latest/minikube-installer.exe\" -OutFile \"minikube-installer.exe\" Start-Process -FilePath \".\\minikube-installer.exe\" -Wait","title":"Passo 2: Instalar o Minikube"},{"location":"sre/#passo-3-iniciar-o-minikube","text":"Inicie o Minikube: minikube start - -driver = docker","title":"Passo 3: Iniciar o Minikube"},{"location":"sre/#passo-4-instalar-o-kubectl","text":"Baixe e instale o Kubectl: Invoke-WebRequest -Uri \"https://dl.k8s.io/release/v1.23.0/bin/windows/amd64/kubectl.exe\" -OutFile \"kubectl.exe\" $env:Path += \";$pwd\" kubectl version - -client","title":"Passo 4: Instalar o Kubectl"},{"location":"sre/#passo-5-criar-aplicacao-flask","text":"Crie uma aplica\u00e7\u00e3o Flask simples. Crie um diret\u00f3rio para o projeto e um arquivo app.py : mkdir flask-app cd flask-app New-Item -Path . -Name \"app.py\" -ItemType \"file\" Adicione o seguinte conte\u00fado ao app.py : from flask import Flask app = Flask ( __name__ ) @app . route ( '/' ) def hello (): return \"Hello, World!\" if __name__ == '__main__' : app . run ( host = '0.0.0.0' , port = 5000 ) Crie um arquivo requirements.txt : New-Item -Path . -Name \"requirements.txt\" -ItemType \"file\" Adicione o seguinte conte\u00fado: Flask==2.1.1","title":"Passo 5: Criar Aplica\u00e7\u00e3o Flask"},{"location":"sre/#passo-6-criar-dockerfile","text":"Crie um arquivo Dockerfile com o seguinte conte\u00fado: New-Item -Path . -Name \"Dockerfile\" -ItemType \"file\" Set-Content -Path \"Dockerfile\" -Value @\" FROM python:3.9-slim WORKDIR /app COPY requirements.txt requirements.txt RUN pip install -r requirements.txt COPY . . CMD [\"python\", \"app.py\"] \"@","title":"Passo 6: Criar Dockerfile"},{"location":"sre/#passo-7-construir-e-enviar-a-imagem-docker","text":"Construa a imagem Docker: minikube -p minikube docker-env | Invoke-Expression docker build -t flask-app : latest .","title":"Passo 7: Construir e Enviar a Imagem Docker"},{"location":"sre/#passo-8-criar-manifests-do-kubernetes","text":"Crie um arquivo deployment.yaml : New-Item -Path . -Name \"deployment.yaml\" -ItemType \"file\" Adicione o seguinte conte\u00fado: apiVersion : apps/v1 kind : Deployment metadata : name : flask-app spec : replicas : 3 selector : matchLabels : app : flask-app template : metadata : labels : app : flask-app spec : containers : - name : flask-app image : flask-app:latest imagePullPolicy : Never ports : - containerPort : 5000 Crie um arquivo service.yaml : New-Item -Path . -Name \"service.yaml\" -ItemType \"file\" Adicione o seguinte conte\u00fado: apiVersion : v1 kind : Service metadata : name : flask-app spec : type : NodePort selector : app : flask-app ports : - protocol : TCP port : 5000 targetPort : 5000 nodePort : 30007","title":"Passo 8: Criar Manifests do Kubernetes"},{"location":"sre/#passo-9-aplicar-manifests-do-kubernetes","text":"Aplique os arquivos de configura\u00e7\u00e3o: kubectl apply -f deployment . yaml kubectl apply -f service . yaml","title":"Passo 9: Aplicar Manifests do Kubernetes"},{"location":"sre/#passo-10-verificar-os-pods-e-servico","text":"Verifique os pods: kubectl get pods Verifique o servi\u00e7o: kubectl get svc","title":"Passo 10: Verificar os Pods e Servi\u00e7o"},{"location":"sre/#passo-11-obter-url-de-acesso","text":"Obtenha a URL de acesso: minikube service flask-app - -url Abra a URL no navegador para ver a aplica\u00e7\u00e3o Flask em execu\u00e7\u00e3o.","title":"Passo 11: Obter URL de Acesso"},{"location":"sre/#passo-12-ver-o-minikube-dashboard","text":"Inicie o Minikube dashboard: minikube dashboard Acesse a URL fornecida para visualizar o dashboard.","title":"Passo 12: Ver o Minikube Dashboard"},{"location":"sre/#como-se-tornar-um-excelente-sre","text":"","title":"Como se Tornar um Excelente SRE"},{"location":"sre/#introducao-ao-sre","text":"Um Site Reliability Engineer (SRE) \u00e9 respons\u00e1vel por garantir a confiabilidade e disponibilidade dos sistemas em produ\u00e7\u00e3o. Aqui est\u00e3o os passos essenciais para se tornar um excelente SRE.","title":"Introdu\u00e7\u00e3o ao SRE"},{"location":"sre/#1-compreender-os-fundamentos","text":"\u00c9 crucial ter uma forte compreens\u00e3o dos fundamentos de computa\u00e7\u00e3o e redes, incluindo sistemas operacionais, redes, protocolos de comunica\u00e7\u00e3o e arquitetura de sistemas distribu\u00eddos. Estude conceitos de sistemas operacionais como processos, threads, gerenciamento de mem\u00f3ria e sistemas de arquivos. Aprenda sobre redes, incluindo TCP/IP, DNS, HTTP/HTTPS e firewalls.","title":"1. Compreender os Fundamentos"},{"location":"sre/#2-aprender-programacao-e-automacao","text":"A automa\u00e7\u00e3o \u00e9 uma parte vital do SRE. Familiarize-se com linguagens de programa\u00e7\u00e3o como Python, Go, ou Ruby, e ferramentas de automa\u00e7\u00e3o como Ansible, Puppet, e Chef. Desenvolva scripts para automatizar tarefas repetitivas. Crie e gerencie pipelines de CI/CD.","title":"2. Aprender Programa\u00e7\u00e3o e Automa\u00e7\u00e3o"},{"location":"sre/#3-conhecer-ferramentas-de-monitoramento-e-logging","text":"Um SRE deve ser proficiente em monitoramento e logging para detectar e solucionar problemas rapidamente. Aprenda a usar ferramentas como Prometheus, Grafana, ELK Stack (Elasticsearch, Logstash, Kibana), e Splunk. Configure alertas para monitorar a sa\u00fade dos sistemas.","title":"3. Conhecer Ferramentas de Monitoramento e Logging"},{"location":"sre/#4-dominar-cloud-e-conteineres","text":"O conhecimento em tecnologias de cloud e cont\u00eaineres \u00e9 essencial. Estude servi\u00e7os de cloud como AWS, Google Cloud, e Azure. Aprenda a usar cont\u00eaineres com Docker e orquestra\u00e7\u00e3o de cont\u00eaineres com Kubernetes.","title":"4. Dominar Cloud e Cont\u00eaineres"},{"location":"sre/#5-praticar-resolucao-de-problemas-e-resiliencia","text":"Desenvolva habilidades de resolu\u00e7\u00e3o de problemas e melhore a resili\u00eancia dos sistemas. Realize exerc\u00edcios de Chaos Engineering para testar a resili\u00eancia dos sistemas. Participe de simula\u00e7\u00f5es de incidentes para praticar a resposta a incidentes.","title":"5. Praticar Resolu\u00e7\u00e3o de Problemas e Resili\u00eancia"},{"location":"sre/#6-focar-na-cultura-e-comunicacao","text":"Um excelente SRE deve promover uma cultura de colabora\u00e7\u00e3o e comunica\u00e7\u00e3o eficaz. Trabalhe em estreita colabora\u00e7\u00e3o com equipes de desenvolvimento e opera\u00e7\u00f5es. Participe de revis\u00f5es p\u00f3s-incidente (Postmortems) para identificar \u00e1reas de melhoria.","title":"6. Focar na Cultura e Comunica\u00e7\u00e3o"},{"location":"sre/#recursos-adicionais","text":"Para aprofundar seus conhecimentos em DevOps e Seguran\u00e7a da Informa\u00e7\u00e3o, explore os seguintes recursos: Trilha de DevOps Trilha de Seguran\u00e7a da Informa\u00e7\u00e3o","title":"Recursos Adicionais"},{"location":"sre/#conclusao","text":"Tornar-se um excelente SRE requer uma combina\u00e7\u00e3o de habilidades t\u00e9cnicas e soft skills. Continuar aprendendo e se adaptando \u00e0s novas tecnologias e pr\u00e1ticas \u00e9 essencial para o sucesso nesta carreira.","title":"Conclus\u00e3o"},{"location":"sre/#sua-opiniao-e-importante","text":"Deixe seu feedback com estrelas e coment\u00e1rios e ajude-nos a melhorar o Inteli e o curso.","title":"Sua Opini\u00e3o \u00e9 Importante!"}]}